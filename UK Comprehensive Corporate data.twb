<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <_.fcp.PatternedLineMarks.true...PatternedLineMarks />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Time_Period' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='12'>
        <calculation class='tableau' formula='12' />
        <range granularity='1' max='16' min='1' />
      </column>
      <column caption='Top_N_Sic_div' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range max='50.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='bq-results-20241203-060417-1733206437532' inline='true' name='federated.0jr34oa1q1fe0l1df8qz71wrvn27' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bq-results-20241203-060417-1733206437532' name='textscan.12npy5f1t39i361cezv1z0jnio1l'>
            <connection class='textscan' directory='/Users/ymk/Downloads' filename='bq-results-20241203-060417-1733206437532.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.12npy5f1t39i361cezv1z0jnio1l' name='bq-results-20241203-060417-1733206437532.csv' table='[bq-results-20241203-060417-1733206437532#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='trip_id' ordinal='0' />
            <column datatype='integer' name='duration_sec' ordinal='1' />
            <column datatype='string' name='start_date' ordinal='2' />
            <column datatype='string' name='start_station_name' ordinal='3' />
            <column datatype='integer' name='start_station_id' ordinal='4' />
            <column datatype='string' name='end_date' ordinal='5' />
            <column datatype='string' name='end_station_name' ordinal='6' />
            <column datatype='integer' name='end_station_id' ordinal='7' />
            <column datatype='integer' name='bike_number' ordinal='8' />
            <column datatype='integer' name='zip_code' ordinal='9' />
            <column datatype='string' name='subscriber_type' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trip_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[trip_id]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>trip_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>20</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start_station_name]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>start_station_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start_station_id]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>start_station_id</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end_station_name]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>end_station_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end_station_id]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>end_station_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bike_number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bike_number]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>bike_number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>subscriber_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[subscriber_type]</local-name>
            <parent-name>[bq-results-20241203-060417-1733206437532.csv]</parent-name>
            <remote-alias>subscriber_type</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='bq-results-20241203-060417-1733206437532.csv' datatype='table' name='[__tableau_internal_object_id__].[bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1]' role='measure' type='quantitative' />
      <column caption='Bike Number' datatype='integer' name='[bike_number]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='string' name='[end_date]' role='dimension' type='nominal' />
      <column caption='End Station Id' datatype='integer' name='[end_station_id]' role='dimension' type='ordinal' />
      <column caption='End Station Name' datatype='string' name='[end_station_name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='string' name='[start_date]' role='dimension' type='nominal' />
      <column caption='Start Station Id' datatype='integer' name='[start_station_id]' role='dimension' type='ordinal' />
      <column caption='Start Station Name' datatype='string' name='[start_station_name]' role='dimension' type='nominal' />
      <column caption='Subscriber Type' datatype='string' name='[subscriber_type]' role='dimension' type='nominal' />
      <column caption='Trip Id' datatype='integer' name='[trip_id]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='bq-results-20241203-060417-1733206437532.csv' id='bq-results-20241203-060417-1733206437532.csv_F67CEC23AD50454AAB1628FB52DFDEE1'>
            <properties context=''>
              <relation connection='textscan.12npy5f1t39i361cezv1z0jnio1l' name='bq-results-20241203-060417-1733206437532.csv' table='[bq-results-20241203-060417-1733206437532#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='trip_id' ordinal='0' />
                  <column datatype='integer' name='duration_sec' ordinal='1' />
                  <column datatype='string' name='start_date' ordinal='2' />
                  <column datatype='string' name='start_station_name' ordinal='3' />
                  <column datatype='integer' name='start_station_id' ordinal='4' />
                  <column datatype='string' name='end_date' ordinal='5' />
                  <column datatype='string' name='end_station_name' ordinal='6' />
                  <column datatype='integer' name='end_station_id' ordinal='7' />
                  <column datatype='integer' name='bike_number' ordinal='8' />
                  <column datatype='integer' name='zip_code' ordinal='9' />
                  <column datatype='string' name='subscriber_type' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' inline='true' name='federated.1lpix941yvmdkh1bllczo01uizke' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='BigQuery' name='bigquery.124jc3j0wrukwg1g6jvyy0osuw64'>
            <connection CATALOG='ba775-a-09' EXECCATALOG='ba775-a-09' authentication='oauth' class='bigquery' connection-dialect='google-sql' project='BA775-A-09-fall24' schema='ba775_a09' server-oauth='' username='ymk@bu.edu' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='companies_cleaned' table='[ba775-a-09.ba775_a09].[companies_cleaned]' type='table' />
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query' type='text'><![CDATA[SELECT
  company_status,
  COUNT(company_number) AS count_comp,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) <<= 2003 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned`
       WHERE EXTRACT(YEAR FROM incorporation_date) <<= 2003 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_pre_2004,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) BETWEEN 2004 AND 2013 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned`
       WHERE EXTRACT(YEAR FROM incorporation_date) BETWEEN 2004 AND 2013 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_2004_2013,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) BETWEEN 2014 AND 2024 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned_partitioned_by_year`
       WHERE EXTRACT(YEAR FROM incorporation_date) BETWEEN 2014 AND 2024 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_2014_2024
FROM
  `ba775-a-09.ba775_a09.companies_cleaned` AS c
WHERE
  c.incorporation_date IS NOT NULL
GROUP BY
  company_status
ORDER BY
  count_comp DESC]]></relation>
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='companies_sic_code_cleaned' table='[ba775-a-09.ba775_a09].[companies_sic_code_cleaned]' type='table' />
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='fillings_cleaned' table='[ba775-a-09.ba775_a09].[fillings_cleaned]' type='table' />
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='officers_and_owners_cleaned' table='[ba775-a-09.ba775_a09].[officers_and_owners_cleaned]' type='table' />
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query2' type='text'>WITH CleanedWords AS (
    SELECT
        REGEXP_EXTRACT_ALL(LOWER(nationality), r&apos;\b[a-zA-Z]+\b&apos;) AS words,
        is_owner
    FROM `ba775_a09.officers_and_owners_cleaned`
),
SplitWords AS (
    SELECT
        INITCAP(word) AS nationality,
        is_owner
    FROM CleanedWords,
    UNNEST(words) AS word
)
SELECT
    nationality,
    COUNT(*) AS total_officers,
    COUNT(CASE WHEN is_owner = TRUE THEN 1 END) AS owners_count,
    COUNT(CASE WHEN is_owner = FALSE THEN 1 END) AS non_owners_count,
    ROUND(COUNT(CASE WHEN is_owner = TRUE THEN 1 END) / COUNT(*) * 100, 2) AS ownership_rate
FROM SplitWords
WHERE nationality NOT IN (&apos;&apos;, &apos;-&apos;, &apos;unknown&apos;)
GROUP BY nationality
ORDER BY total_officers DESC
LIMIT 10</relation>
          <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query1' type='text'>SELECT
  occupation,
  COUNT(*) AS total_individuals,
  SUM(CASE WHEN LOWER(nationality) = &apos;british&apos; THEN 1 ELSE 0 END) AS british_count,
  SUM(CASE WHEN LOWER(nationality) != &apos;british&apos; THEN 1 ELSE 0 END) AS non_british_count,
  ROUND(SUM(CASE WHEN LOWER(nationality) = &apos;british&apos; THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS british_percentage,
  ROUND(SUM(CASE WHEN LOWER(nationality) != &apos;british&apos; THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS non_british_percentage
FROM `ba775_a09.officers_and_owners_cleaned`
WHERE occupation IS NOT NULL
  AND occupation NOT LIKE &apos;none&apos;
  AND occupation NOT LIKE &apos;retired&apos;
  AND nationality IS NOT NULL
GROUP BY occupation
ORDER BY total_individuals DESC
LIMIT 20</relation>
        </relation>
        <cols>
          <map key='[british_count]' value='[Custom SQL Query1].[british_count]' />
          <map key='[british_percentage]' value='[Custom SQL Query1].[british_percentage]' />
          <map key='[category]' value='[fillings_cleaned].[category]' />
          <map key='[company_name]' value='[companies_cleaned].[company_name]' />
          <map key='[company_number (companies_sic_code_cleaned)]' value='[companies_sic_code_cleaned].[company_number]' />
          <map key='[company_number (fillings_cleaned)]' value='[fillings_cleaned].[company_number]' />
          <map key='[company_number (officers_and_owners_cleaned)]' value='[officers_and_owners_cleaned].[company_number]' />
          <map key='[company_number]' value='[companies_cleaned].[company_number]' />
          <map key='[company_status (Custom SQL Query)]' value='[Custom SQL Query].[company_status]' />
          <map key='[company_status]' value='[companies_cleaned].[company_status]' />
          <map key='[company_type]' value='[companies_cleaned].[company_type]' />
          <map key='[count_comp]' value='[Custom SQL Query].[count_comp]' />
          <map key='[country_of_residence]' value='[officers_and_owners_cleaned].[country_of_residence]' />
          <map key='[current_assets]' value='[companies_cleaned].[current_assets]' />
          <map key='[date]' value='[fillings_cleaned].[date]' />
          <map key='[date_of_appointment]' value='[officers_and_owners_cleaned].[date_of_appointment]' />
          <map key='[date_of_cessation (companies_cleaned)]' value='[companies_cleaned].[date_of_cessation]' />
          <map key='[incorporation_date]' value='[companies_cleaned].[incorporation_date]' />
          <map key='[is_owner]' value='[officers_and_owners_cleaned].[is_owner]' />
          <map key='[jurisdiction]' value='[companies_cleaned].[jurisdiction]' />
          <map key='[kind]' value='[officers_and_owners_cleaned].[kind]' />
          <map key='[name]' value='[officers_and_owners_cleaned].[name]' />
          <map key='[nationality (Custom SQL Query2)]' value='[Custom SQL Query2].[nationality]' />
          <map key='[nationality]' value='[officers_and_owners_cleaned].[nationality]' />
          <map key='[non_british_count]' value='[Custom SQL Query1].[non_british_count]' />
          <map key='[non_british_percentage]' value='[Custom SQL Query1].[non_british_percentage]' />
          <map key='[non_owners_count]' value='[Custom SQL Query2].[non_owners_count]' />
          <map key='[occupation (Custom SQL Query1)]' value='[Custom SQL Query1].[occupation]' />
          <map key='[occupation]' value='[officers_and_owners_cleaned].[occupation]' />
          <map key='[office_address]' value='[companies_cleaned].[office_address]' />
          <map key='[officer_role]' value='[officers_and_owners_cleaned].[officer_role]' />
          <map key='[officers]' value='[companies_cleaned].[officers]' />
          <map key='[owners]' value='[companies_cleaned].[owners]' />
          <map key='[owners_count]' value='[Custom SQL Query2].[owners_count]' />
          <map key='[ownership_rate]' value='[Custom SQL Query2].[ownership_rate]' />
          <map key='[pages]' value='[fillings_cleaned].[pages]' />
          <map key='[pct_2004_2013]' value='[Custom SQL Query].[pct_2004_2013]' />
          <map key='[pct_2014_2024]' value='[Custom SQL Query].[pct_2014_2024]' />
          <map key='[pct_pre_2004]' value='[Custom SQL Query].[pct_pre_2004]' />
          <map key='[sic_code (companies_sic_code_cleaned)]' value='[companies_sic_code_cleaned].[sic_code]' />
          <map key='[sic_code]' value='[companies_cleaned].[sic_code]' />
          <map key='[sic_description]' value='[companies_sic_code_cleaned].[sic_description]' />
          <map key='[sic_division]' value='[companies_sic_code_cleaned].[sic_division]' />
          <map key='[sic_section]' value='[companies_sic_code_cleaned].[sic_section]' />
          <map key='[total_individuals]' value='[Custom SQL Query1].[total_individuals]' />
          <map key='[total_officers]' value='[Custom SQL Query2].[total_officers]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>company_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_number]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>company_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_type]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>company_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>office_address</remote-name>
            <remote-type>130</remote-type>
            <local-name>[office_address]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>office_address</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jurisdiction</remote-name>
            <remote-type>130</remote-type>
            <local-name>[jurisdiction]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>jurisdiction</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_status]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>company_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>incorporation_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[incorporation_date]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>incorporation_date</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_name]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>company_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sic_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sic_code]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>sic_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owners</remote-name>
            <remote-type>20</remote-type>
            <local-name>[owners]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>owners</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officers]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>officers</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current_assets</remote-name>
            <remote-type>5</remote-type>
            <local-name>[current_assets]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>current_assets</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_of_cessation</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_of_cessation (companies_cleaned)]</local-name>
            <parent-name>[companies_cleaned]</parent-name>
            <remote-alias>date_of_cessation</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_status (Custom SQL Query)]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>company_status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_1D391B8F22B043BB966B7F5351F925F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count_comp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count_comp]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>count_comp</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_1D391B8F22B043BB966B7F5351F925F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_pre_2004</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_pre_2004]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>pct_pre_2004</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_1D391B8F22B043BB966B7F5351F925F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_2004_2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_2004_2013]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>pct_2004_2013</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_1D391B8F22B043BB966B7F5351F925F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pct_2014_2024</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pct_2014_2024]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>pct_2014_2024</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_1D391B8F22B043BB966B7F5351F925F2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_number (companies_sic_code_cleaned)]</local-name>
            <parent-name>[companies_sic_code_cleaned]</parent-name>
            <remote-alias>company_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sic_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sic_code (companies_sic_code_cleaned)]</local-name>
            <parent-name>[companies_sic_code_cleaned]</parent-name>
            <remote-alias>sic_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sic_description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sic_description]</local-name>
            <parent-name>[companies_sic_code_cleaned]</parent-name>
            <remote-alias>sic_description</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sic_section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sic_section]</local-name>
            <parent-name>[companies_sic_code_cleaned]</parent-name>
            <remote-alias>sic_section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sic_division</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sic_division]</local-name>
            <parent-name>[companies_sic_code_cleaned]</parent-name>
            <remote-alias>sic_division</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_number (fillings_cleaned)]</local-name>
            <parent-name>[fillings_cleaned]</parent-name>
            <remote-alias>company_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[fillings_cleaned]</parent-name>
            <remote-alias>date</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[fillings_cleaned]</parent-name>
            <remote-alias>category</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pages</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pages]</local-name>
            <parent-name>[fillings_cleaned]</parent-name>
            <remote-alias>pages</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[company_number (officers_and_owners_cleaned)]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>company_number</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>kind</remote-name>
            <remote-type>130</remote-type>
            <local-name>[kind]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>kind</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_role</remote-name>
            <remote-type>130</remote-type>
            <local-name>[officer_role]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>officer_role</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[occupation]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>occupation</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_of_appointment</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date_of_appointment]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>date_of_appointment</remote-alias>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_owner</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_owner]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>is_owner</remote-alias>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_of_residence</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_of_residence]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>country_of_residence</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[officers_and_owners_cleaned]</parent-name>
            <remote-alias>nationality</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[nationality (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>nationality</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_91AE2AB8354E42AC8F54172ABC624806]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_officers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_officers]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>total_officers</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_91AE2AB8354E42AC8F54172ABC624806]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>owners_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[owners_count]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>owners_count</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_91AE2AB8354E42AC8F54172ABC624806]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_owners_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_owners_count]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>non_owners_count</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_91AE2AB8354E42AC8F54172ABC624806]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ownership_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ownership_rate]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>ownership_rate</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_91AE2AB8354E42AC8F54172ABC624806]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupation</remote-name>
            <remote-type>130</remote-type>
            <local-name>[occupation (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>occupation</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_individuals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_individuals]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>total_individuals</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>british_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[british_count]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>british_count</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_british_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[non_british_count]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>non_british_count</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>british_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[british_percentage]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>british_percentage</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_british_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[non_british_percentage]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>non_british_percentage</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[_AC187287B90A419FB8557B3435DF7691]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='pre 2004' datatype='integer' name='[2004-2013 (copy)_6775032341992398855]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD( IF YEAR([incorporation_date]) &lt;2004 &#10;THEN [incorporation_date] END)' />
      </column>
      <column datatype='integer' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_6646750118507905024])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(ZN([Calculation_6646750118511620098]) - LOOKUP(ZN([Calculation_6646750118511620098]), -1)) / ABS(LOOKUP(ZN([Calculation_6646750118511620098]), -1))'>
          <table-calc ordering-type='Columns' />
        </calculation>
      </column>
      <column caption='Period ' datatype='string' name='[Calculation_1883912039113248768]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2015 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2019 THEN &quot;2015-2019&quot;&#10;ELSEIF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2020 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2024 THEN &quot;2020-2024&quot;&#10;ELSE NULL&#10;END' />
      </column>
      <column caption='rank_within_period' datatype='integer' name='[Calculation_1883912039113789441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM(IF [Calculation_1883912039113248768] = &apos;2015-2019&apos; THEN [current_assets] END), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank1' datatype='integer' name='[Calculation_1883912039120031750]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([current_assets]), &apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank2 ' datatype='real' name='[Calculation_1883912039120347143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG([Calculation_1883912039120031750])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank&gt;=20 ' datatype='integer' name='[Calculation_1883912039322976264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Calculation_1883912039113789441] &lt;= 20 THEN [Calculation_1883912039113789441]&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MOVING_AVG' datatype='real' name='[Calculation_1883912039389216784]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([current_assets]), -2, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Quarter ' datatype='datetime' name='[Calculation_1883912039445557266]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATETRUNC(&apos;quarter&apos;, [incorporation_date])' />
      </column>
      <column caption='Moving_Avg ' datatype='real' name='[Calculation_1883912039451533332]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([current_assets]), -[Parameters].[Parameter 1] + 1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank_sic_div' datatype='integer' name='[Calculation_1883912039461928984]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([current_assets]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='2004-2013' datatype='integer' name='[Calculation_6646750118507905024]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD( IF YEAR([incorporation_date]) &gt;=2004 &#10;AND &#10;YEAR([incorporation_date]) &lt;=2013&#10;THEN [incorporation_date] END)' />
      </column>
      <column caption='2014-2024' datatype='integer' name='[Calculation_6646750118508212225]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(IF YEAR([incorporation_date]) &gt;= 2014 &#10;AND YEAR([incorporation_date]) &lt;= 2024 &#10;THEN [incorporation_date] END)' />
      </column>
      <column caption='Percentage increase (count)' datatype='real' name='[Calculation_6646750118511620098]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_6646750118508212225] - [Calculation_6646750118507905024]) / [Calculation_6646750118507905024]' />
      </column>
      <column caption='Count of companies' datatype='integer' name='[Calculation_6646750118736818180]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([company_number])' />
      </column>
      <column caption='Total _Count' datatype='integer' name='[Calculation_6646750118737883141]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(COUNTD([company_number]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ratio_percentage' datatype='real' name='[Calculation_6646750118738010118]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_6646750118736818180] / [Calculation_6646750118737883141]) * 100'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
      </column>
      <column caption='Calculation4' datatype='real' name='[Calculation_6775032341977165828]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([company_name]) / TOTAL(COUNTD([company_name]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='date grouped' datatype='string' name='[Calculation_6775032341990961157]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF YEAR([incorporation_date]) &gt;= 2014 THEN &quot;2014-2024&quot;&#10;ELSEIF YEAR([incorporation_date]) &gt;= 2004 THEN &quot;2004-2013&quot;&#10;ELSE &quot;Pre-2004&quot;&#10;END' />
      </column>
      <column caption='pct_pre_2004' datatype='real' name='[Calculation_6775032341992599560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF YEAR([incorporation_date]) &lt; 2004 THEN 1 ELSE 0 END) / [2004-2013 (copy)_6775032341992398855]' />
      </column>
      <column caption='pct_2004_2014' datatype='real' name='[Calculation_6775032341993582601]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF YEAR([incorporation_date]) &gt;= 2004 AND YEAR([incorporation_date]) &lt; 2014 THEN 1 ELSE 0 END) / [Calculation_6646750118507905024]' />
      </column>
      <column caption='officers + owners' datatype='integer' name='[Calculation_6775032342002585612]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[officers]+[owners]' />
      </column>
      <column caption='ownership rate' datatype='real' name='[Calculation_6775032342003130381]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[owners]/[Calculation_6775032342002585612]' />
      </column>
      <column caption='rank difference' datatype='integer' name='[Calculation_6775032342336487441]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF MIN([Calculation_1883912039113248768]) = &quot;2014-2024&quot; THEN&#10;    [rank_within_period (copy)_6775032341971255297] - LOOKUP([rank_within_period (copy)_6775032341971255297], -1)&#10;ELSE&#10;    NULL&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentage increase (assets)' datatype='real' name='[Percentage increase (copy)_6775032342301450256]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Calculation_6646750118508212225] - [Calculation_6646750118507905024]) / [Calculation_6646750118507905024]' />
      </column>
      <column caption='Period  - decade' datatype='string' name='[Period  (copy)_6775032342092308495]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2014 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2024 THEN &quot;2014-2024&quot;&#10;ELSEIF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2004 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2014 THEN &quot;2004-2014&quot;&#10;ELSEIF  DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2004 then &quot;&lt;2004&quot;&#10;ELSE &#10;    NULL&#10;END' />
      </column>
      <column caption='Custom SQL Query' datatype='table' name='[__tableau_internal_object_id__].[_1D391B8F22B043BB966B7F5351F925F2]' role='measure' type='quantitative' />
      <column caption='Query 4' datatype='table' name='[__tableau_internal_object_id__].[_91AE2AB8354E42AC8F54172ABC624806]' role='measure' type='quantitative' />
      <column caption='Custom SQL Query1' datatype='table' name='[__tableau_internal_object_id__].[_AC187287B90A419FB8557B3435DF7691]' role='measure' type='quantitative' />
      <column caption='companies_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' role='measure' type='quantitative' />
      <column caption='companies_sic_code_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9]' role='measure' type='quantitative' />
      <column caption='fillings_cleaned' datatype='table' name='[__tableau_internal_object_id__].[fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA]' role='measure' type='quantitative' />
      <column caption='officers_and_owners_cleaned' datatype='table' name='[__tableau_internal_object_id__].[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Company Name' datatype='string' name='[company_name]' role='dimension' type='nominal' />
      <column caption='Company Number (Companies Sic Code Cleaned)' datatype='string' name='[company_number (companies_sic_code_cleaned)]' role='dimension' type='nominal' />
      <column caption='Company Number (Fillings Cleaned)' datatype='string' name='[company_number (fillings_cleaned)]' role='dimension' type='nominal' />
      <column caption='Company Number (Officers And Owners Cleaned)' datatype='string' name='[company_number (officers_and_owners_cleaned)]' role='dimension' type='nominal' />
      <column caption='Company Number' datatype='string' name='[company_number]' role='dimension' type='nominal' />
      <column caption='Company Status' datatype='string' name='[company_status]' role='dimension' type='nominal' />
      <column caption='Company Type' datatype='string' name='[company_type]' role='dimension' type='nominal' />
      <column caption='Country Of Residence' datatype='string' name='[country_of_residence]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Of Appointment' datatype='date' name='[date_of_appointment]' role='dimension' type='ordinal' />
      <column caption='Date Of Cessation (Companies Cleaned)' datatype='date' name='[date_of_cessation (companies_cleaned)]' role='dimension' type='ordinal' />
      <column caption='Incorporation Date' datatype='date' name='[incorporation_date]' role='dimension' type='ordinal' />
      <column caption='Is Owner' datatype='boolean' name='[is_owner]' role='dimension' type='nominal' />
      <column caption='Jurisdiction' datatype='string' name='[jurisdiction]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Kind' datatype='string' name='[kind]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Nationalities - Non British' datatype='string' name='[nationality (Custom SQL Query2)]' role='dimension' type='nominal' />
      <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
      <column caption='Occupation' datatype='string' name='[occupation]' role='dimension' type='nominal' />
      <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Officer Role' datatype='string' name='[officer_role]' role='dimension' type='nominal' />
      <column caption='Officers' datatype='integer' name='[officers]' role='measure' type='quantitative' />
      <column caption='Owners' datatype='integer' name='[owners]' role='measure' type='quantitative' />
      <column datatype='real' name='[ownership_rate]' role='measure' type='quantitative' />
      <column caption='Pages' datatype='integer' name='[pages]' role='measure' type='quantitative' />
      <column datatype='real' name='[pct_2004_2013]' role='measure' type='quantitative' />
      <column caption='pct_2014-2024' datatype='real' name='[pct_2004_2014 (copy)_6775032341994065930]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM(IF YEAR([incorporation_date]) &gt;= 2004 AND YEAR([incorporation_date]) &lt; 2014 THEN 1 ELSE 0 END) / [Calculation_6646750118508212225]' />
      </column>
      <column datatype='real' name='[pct_2014_2024]' role='measure' type='quantitative' />
      <column datatype='real' name='[pct_pre_2004]' role='measure' type='quantitative' />
      <column caption='rank_within_period (copy)' datatype='integer' name='[rank_within_period (copy)_6775032341971255297]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([current_assets]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sic Code (Companies Sic Code Cleaned)' datatype='string' name='[sic_code (companies_sic_code_cleaned)]' role='dimension' type='nominal' />
      <column caption='Sic Code' datatype='string' name='[sic_code]' role='dimension' type='nominal' />
      <column caption='Sic Description' datatype='string' name='[sic_description]' role='dimension' type='nominal' />
      <column caption='Sic Division' datatype='string' name='[sic_division]' role='dimension' type='nominal' />
      <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
          <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
          <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
          <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
          <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
          <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
          <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
          <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
          <alias key='&quot;Information and communication&quot;' value='IT' />
          <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
          <alias key='&quot;Other service activities&quot;' value='Service' />
          <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
          <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
          <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
          <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
          <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
          <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
        </aliases>
      </column>
      <column datatype='integer' name='[total_officers]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[current_assets]' derivation='Avg' name='[avg:current_assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_officers]' derivation='Avg' name='[avg:total_officers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1883912039113248768]' derivation='None' name='[none:Calculation_1883912039113248768:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Period  (copy)_6775032342092308495]' derivation='None' name='[none:Period  (copy)_6775032342092308495:nk]' pivot='key' type='nominal' />
      <column-instance column='[company_status]' derivation='None' name='[none:company_status:nk]' pivot='key' type='nominal' />
      <column-instance column='[jurisdiction]' derivation='None' name='[none:jurisdiction:nk]' pivot='key' type='nominal' />
      <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
      <column-instance column='[sic_division]' derivation='None' name='[none:sic_division:nk]' pivot='key' type='nominal' />
      <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
      <column-instance column='[current_assets]' derivation='Sum' name='[pcdf:sum:current_assets:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[current_assets]' derivation='Sum' name='[sum:current_assets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ownership_rate]' derivation='Sum' name='[sum:ownership_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pct_2004_2013]' derivation='Sum' name='[sum:pct_2004_2013:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pct_2014_2024]' derivation='Sum' name='[sum:pct_2014_2024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pct_pre_2004]' derivation='Sum' name='[sum:pct_pre_2004:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_officers]' derivation='Sum' name='[sum:total_officers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incorporation_date]' derivation='Quarter-Trunc' name='[tqr:incorporation_date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[incorporation_date]' derivation='Year-Trunc' name='[tyr:incorporation_date:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1883912039389216784]' derivation='User' name='[usr:Calculation_1883912039389216784:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1883912039389216784]' derivation='User' name='[usr:Calculation_1883912039389216784:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1883912039451533332]' derivation='User' name='[usr:Calculation_1883912039451533332:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[tqr:incorporation_date:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1883912039451533332]' derivation='User' name='[usr:Calculation_1883912039451533332:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.1lpix941yvmdkh1bllczo01uizke].[tqr:incorporation_date:qk]' />
          <sort direction='ASC' using='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118507905024:qk]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1883912039451533332]' derivation='User' name='[usr:Calculation_1883912039451533332:qk:6]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.1lpix941yvmdkh1bllczo01uizke].[tqr:incorporation_date:qk]' />
          <order field='[federated.1lpix941yvmdkh1bllczo01uizke].[sic_division]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1883912039451533332]' derivation='User' name='[usr:Calculation_1883912039451533332:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_6646750118507905024]' derivation='User' name='[usr:Calculation_6646750118507905024:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6646750118508212225]' derivation='User' name='[usr:Calculation_6646750118508212225:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6646750118511620098]' derivation='User' name='[usr:Calculation_6646750118511620098:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6646750118736818180]' derivation='User' name='[usr:Calculation_6646750118736818180:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_6646750118738010118]' derivation='User' name='[usr:Calculation_6646750118738010118:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' />
        <table-calc field='[federated.1lpix941yvmdkh1bllczo01uizke].[Calculation_6646750118737883141]' ordering-type='Columns' />
      </column-instance>
      <column-instance column='[Calculation_6775032342336487441]' derivation='User' name='[usr:Calculation_6775032342336487441:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[sic_section]' ordering-type='Field' />
        <table-calc field='[federated.1lpix941yvmdkh1bllczo01uizke].[rank_within_period (copy)_6775032341971255297]' ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_6775032342336487441]' derivation='User' name='[usr:Calculation_6775032342336487441:qk:7]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[sic_section]' ordering-type='Field' />
        <table-calc field='[federated.1lpix941yvmdkh1bllczo01uizke].[rank_within_period (copy)_6775032341971255297]' ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[sic_section]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[rank_within_period (copy)_6775032341971255297]' derivation='User' name='[usr:rank_within_period (copy)_6775032341971255297:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[current_assets]' derivation='Sum' name='[win:sum:current_assets:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[current_assets]' derivation='Sum' name='[win:sum:current_assets:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[yr:incorporation_date:ok]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[date_of_cessation (companies_cleaned)]' derivation='Year' name='[yr:date_of_cessation (companies_cleaned):ok]' pivot='key' type='ordinal' />
      <column-instance column='[incorporation_date]' derivation='Year' name='[yr:incorporation_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Nationality)' hidden='true' name='[Action (Nationality)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[nationality]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Company Status,YEAR(Date Of Cessation (Companies Cleaned)))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:company_status:nk]' />
          <groupfilter function='level-members' level='[yr:date_of_cessation (companies_cleaned):ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Jurisdiction,YEAR(Date Of Cessation (Companies Cleaned)))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:jurisdiction:nk]' />
          <groupfilter function='level-members' level='[yr:date_of_cessation (companies_cleaned):ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (city,Period  - decade,Sic Section)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_6775032341975179266:nk]' />
          <groupfilter function='level-members' level='[none:Period  (copy)_6775032342092308495:nk]' />
          <groupfilter function='level-members' level='[none:sic_section:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sic_section:nk]' palette='sf_light' type='palette'>
            <map to='#3296ed'>
              <bucket>&quot;Accommodation and food service activities&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;Dormant company&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Transportation and storage&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Administrative and support service activities&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Human health and social work activities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Agriculture, forestry and fishing&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Public administration and defence; compulsory social security&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Water supply; sewerage, waste management and remediation activities&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other service activities&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arts, entertainment and recreation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Information and communication&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;Financial and insurance activities&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Professional, scientific and technical activities&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Real estate activities&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Electricity, gas, steam and air conditioning supply&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Activities of extraterritorial organisations and bodies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mining and quarrying&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:sic_division:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Air transport&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Legal and accounting activities&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manufacture of tobacco products&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Repair and installation of machinery and equipment&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wholesale trade, except of motor vehicles and motorcycles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fishing and aquaculture&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Manufacture of leather and related products&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Postal and courier activities&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Travel agency, tour operator and other reservation service and related activities&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Activities of head offices; management consultancy activities&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Human health activities&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manufacture of other transport equipment&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Publishing activities&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Waste collection, treatment and disposal activities; materials recovery&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Creative, arts and entertainment activities&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manufacture of beverages&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mining of metal ores&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Scientific research and development&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Architectural and engineering activities; technical testing and analysis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libraries, archives, museums and other cultural activities&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manufacture of wearing apparel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Repair of computers and personal and household goods&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Activities of households as employers of domestic personnel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Information service activities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manufacture of paper and paper products&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Real estate activities&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Water collection, treatment and supply&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Extraction of crude petroleum and natural gas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Manufacture of food products&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Other personal service activities&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sports activities and amusement and recreation activities&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accommodation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Food and beverage service activities&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Manufacture of machinery and equipment n.e.c.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Printing and reproduction of recorded media&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Undifferentiated goods- and services-producing activities of private households for own use&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Electricity, gas, steam and air conditioning supply&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Manufacture of electrical equipment&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Other manufacturing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Social work activities without accommodation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Activities of membership organisations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Insurance, reinsurance and pension funding, except compulsory social security&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manufacture of rubber and plastic products&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Remediation activities and other waste management services.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Water transport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Crop and animal production, hunting and related service activities&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Manufacture of chemicals and chemical products&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mining support service activities&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Security and investigation activities&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dormant Company&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manufacture of coke and refined petroleum products&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Motion picture, video and television programme production, sound recording and music publishing activities&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Services to buildings and landscape activities&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Employment activities&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manufacture of fabricated metal products, except machinery and equipment&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Other mining and quarrying&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Specialised construction activities&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Financial service activities, except insurance and pension funding&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Manufacture of furniture&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Other professional, scientific and technical activities&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Civil engineering&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Computer programming, consultancy and related activities&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manufacture of basic metals&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manufacture of wood and of products of wood and cork, except furniture; manufacture of articles of straw and plaiting materials&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Residential care activities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Advertising and market research&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Land transport and transport via pipelines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manufacture of textiles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rental and leasing activities&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wholesale and retail trade and repair of motor vehicles and motorcycles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Activities auxiliary to financial services and insurance activities&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Forestry and logging&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manufacture of motor vehicles, trailers and semi-trailers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Programming and broadcasting activities&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Veterinary activities&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manufacture of computer, electronic and optical products&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Office administrative, office support and other business support activities&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sewerage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Construction of buildings&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manufacture of basic pharmaceutical products and pharmaceutical preparations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mining of coal and lignite&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Retail trade, except of motor vehicles and motorcycles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Activities of extraterritorial organisations and bodies&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambling and betting activities&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manufacture of other non-metallic mineral products&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Public administration and defence; compulsory social security&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warehousing and support activities for transportation&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:pct_2004_2013:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118507905024:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342336487441:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342336487441:qk:7]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118736818180:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[pcdf:sum:current_assets:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039389216784:qk:1]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039389216784:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[avg:current_assets:qk]&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[avg:total_officers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:pct_pre_2004:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118738010118:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[sum:pct_2014_2024:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039451533332:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039451533332:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039451533332:qk:6]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_1883912039451533332:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118508212225:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[usr:rank_within_period (copy)_6775032341971255297:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[diff:sum:current_assets:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:11]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:13]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:17]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:19]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:2]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk:9]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1lpix941yvmdkh1bllczo01uizke].[win:sum:current_assets:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:jurisdiction:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;England/Wales&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wales &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Foreign (Non E.U.)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:company_status:nk]' palette='sf_light' type='palette'>
            <map to='#26aba4'>
              <bucket>&quot;Insolvency Proceedings&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;Receiver Action&quot;</bucket>
            </map>
            <map to='#4ed4cd'>
              <bucket>&quot;Liquidation&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;Converted / Closed&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;Voluntary Arrangement&quot;</bucket>
            </map>
            <map to='#a27099'>
              <bucket>&quot;Dissolved&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Removed&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;In Administration&quot;</bucket>
            </map>
            <map to='#e0b2d2'>
              <bucket>&quot;Active&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Registered&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:nationality:nk]' type='palette'>
            <map to='#26aba4'>
              <bucket>&quot;Indian&quot;</bucket>
            </map>
            <map to='#3296ed'>
              <bucket>&quot;American&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Albanian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australian/Uk&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermudian Britsh Overseas Territories Citizen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British (Northern Irish)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British/Northern Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Canadian/Usa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Citizen Of Vanuatu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cymraeg - Welsh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dual Nationality - British And German&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japanese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanese And French&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Managing Director&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norwegian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portuguese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salvadorean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singaporean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudanese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad British&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uk &amp; Australian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uk/Usa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uzbek&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zwe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arabian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Br&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;British Protecter Person&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burmese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chinese (Hksar)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congorese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danish&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;English And Usa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gbr&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hellinic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Irish/Us Dual&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malagasy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montserratian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigerian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Persian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Retired&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scottish/Chinese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Sudanese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tanzanian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ugoslavian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uk-Australian&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unitred Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wn&quot;</bucket>
            </map>
            <map to='#4ed4cd'>
              <bucket>&quot;Irish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belorus&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brisith/Irish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;British-Irish-European&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citizen Of Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Coventry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Driver&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;English&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gerogian(British Citizen)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Konger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kurdish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lalvian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maldivian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;N Irish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Korean&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Polish&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roumain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russian / Uk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelloise&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lankan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tongan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uk (English)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uk/Gb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Us Native&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yugoslav&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Italian&quot;</bucket>
            </map>
            <map to='#77b9f2'>
              <bucket>&quot;Chinese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;American / English&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B/English&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bielarusian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;British And New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brtish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Central African&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Company Director&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cymreig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuadorean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fijian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grenadian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iranian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lietuvos&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Martiniquais&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepalese&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pwylaidd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sao Tomean&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenskai Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Swazi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkish&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uk And South African&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ukranian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vincentian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Algerian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austrian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bermudian/British Oversea Territories Citizen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British (Other)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British/Northern Irish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cape Verdean&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cymraes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dual Us/Uk&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Irish Rsa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manx&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Napal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Omani&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prydeinig&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salvak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovak&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Surinamese&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidadian&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uk &amp; French&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uk/Usa Dual Citizen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Venezolano&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Acottish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aus/Uk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bengali&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Britich English&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;British-Northern Irish&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroonian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Citizen Of The Dominican Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dual - Bosnia-Herzegovinian &amp; Uk&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrean&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghanaian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hongkong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italian/Australian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lao&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;N/A&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cypriot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Polish/British Dual Nationality&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rwandan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sharjah&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Helenian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trimidad Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uk / Us&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uk/Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Usa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yugoslavian&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Pakistani&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;French&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Antiguan/ British&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbadian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswanan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;British New Zealandr&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Burkina-Faso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congloese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Congolese (Congo)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;English (But Born In Germany)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;H K Chinese&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kosovan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macau Sar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mongolian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaraguan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paraguayan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Republic Of The Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scottish&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South American&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tajik&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;U.S.A.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uk New Zealand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States &amp; British&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Indies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;13/05/1981&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arabic Uae&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgian/South African&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;British Virgin Islander&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Citizen Of Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cook Islander&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Director&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;English Australian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hk/Chinese&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kurdish-Iraqi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moroccan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nigerien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Secretary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tawain&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uk-British&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrexham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anguillan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Banghladeshi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Island Of Jersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bulgarian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chilean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Congoles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cymru&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Engineer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinean&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irish / Uk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldovan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ngr&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Panamanian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic Of Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South African&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks And Caicos Islander&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uk Citizen/British&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdoms Of Great Britain And Northern Irel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Welsh / British&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Afg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beninese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British Citizen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;British.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada/Uk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Citizen Of Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuban&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dual Australian-British&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghanian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungarian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivorian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maltese&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;N/Irish&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Polish/Uk (Dual Nationality)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saesneg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leonean&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Lucian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trindard &amp; Tobagon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uk / Usa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uk/South African&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Usa Canadian&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Amman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Back British&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Black Caribbean&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bruneian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chadian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Company Secretary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cymro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Filipino&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraqi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenyan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuanian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritanian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlande&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peruvian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatari&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romanian&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sar Hong Kong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solihull&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Swedish&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkish Curd&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uk And Usa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kindgom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wallisian&quot;</bucket>
            </map>
            <map to='#c398f5'>
              <bucket>&quot;German&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;American / Uk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andorran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Black/British&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British  Citizone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Builder&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chairman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cymro -Welsh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Egyptian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Finnish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemalan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irish/English Dual Nationality&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kittitian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Litvanian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritian&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palauan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R.O.C&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sarjevo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islander&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swiss&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkish Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uk Brithish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Wel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antiguan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladeshi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnian Serb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;British Korean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bulgerian-English&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chilian&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Congolese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cypriot&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Franca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gabonese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Irish Resident&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Korean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Monegasque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ni-Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Papua New Guinean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic Of Korean&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South African/Israeli&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Taiwanese&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;U.A.E&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uk Gb&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;West Indian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Antiguans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarusian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswanian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;British Permanent Resident&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burkinan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chinese (Hk)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congolese (Drc)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czech Replublic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;English And Australian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gb British&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haitian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kotri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonian&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montenegrin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Part Time Worker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Retailer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scottish / British&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Korean&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tamil Srilankan - British&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ugandan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uk Usa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States Of America.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;White British&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Autrian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British &amp; Austrian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British/Philippine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Caribbean&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Columbian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cymraes - Welsh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dutch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Falkland Islander&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greek Us&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordanian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libyan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nationality Unknown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prydeinwr&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sammarinese&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sloven&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Svensk&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidadian And Tobagonian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uk &amp; Swiss&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuelan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;African&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bermudian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British - Indian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British/Canadian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canadian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Citizen Of Usa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cymraeg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dual British &amp; Usa&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gibraltarian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Icelandic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaican&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manager&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Na&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Irish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portugese&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saesnes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stateless&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad And Tabago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uk &amp; Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Uk/Us&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Usa German&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Argentine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazilian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;British-African&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Citizen Of Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cornish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Djiboutian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;English/Romanian&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyanese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hksar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwaiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malayan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mosotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niuean&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Physiotherapist&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegalese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spanish&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uk - British Citizen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uk/ American&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguayan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Xxb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Angolan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahraini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Black/Welsh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;British German&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Building Contractor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chanian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cymro / Cymraes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emirati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea Conakry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Irish (Of Uk Birth)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Koaren&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexican&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palestinian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Repubilic Of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saudi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Syrian&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkmen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uk Brittish&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom Northern Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Welsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Am&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijani&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bhutanese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British + Israeli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brizilian/British&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cayman Islander&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cymraes Welsh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Timorese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faroese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greenlandic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Investigator&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein Citizen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshallese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauruan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Painter &amp; Decorator&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puerto Rican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uk And French&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukrainian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnamese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Armenian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belizean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;British-Algerian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;C/E&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Citizen Of Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;English/Serbian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;German/Uk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israeli&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mozambican&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;None Stated&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togolese&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uk - English&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uk/Canadian&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Us&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemeni&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1883912039113248768:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2015-2019&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2020-2024&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Period  (copy)_6775032342092308495:nk]' palette='sf_light' type='palette'>
            <map to='#77b9f2'>
              <bucket>&quot;2014-2024&quot;</bucket>
            </map>
            <map to='#9d53f2'>
              <bucket>&quot;2004-2014&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;&lt;2004&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Time_Period' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='12'>
          <calculation class='tableau' formula='12' />
          <range granularity='1' max='16' min='1' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Custom SQL Query' id='_1D391B8F22B043BB966B7F5351F925F2'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query' type='text'><![CDATA[SELECT
  company_status,
  COUNT(company_number) AS count_comp,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) <<= 2003 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned`
       WHERE EXTRACT(YEAR FROM incorporation_date) <<= 2003 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_pre_2004,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) BETWEEN 2004 AND 2013 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned`
       WHERE EXTRACT(YEAR FROM incorporation_date) BETWEEN 2004 AND 2013 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_2004_2013,
  ROUND((COUNT(CASE WHEN EXTRACT(YEAR FROM c.incorporation_date) BETWEEN 2014 AND 2024 THEN company_number END)
      /(SELECT COUNT(company_number)
       FROM `ba775-a-09.ba775_a09.companies_cleaned_partitioned_by_year`
       WHERE EXTRACT(YEAR FROM incorporation_date) BETWEEN 2014 AND 2024 AND incorporation_date IS NOT NULL)) * 100,2) AS pct_2014_2024
FROM
  `ba775-a-09.ba775_a09.companies_cleaned` AS c
WHERE
  c.incorporation_date IS NOT NULL
GROUP BY
  company_status
ORDER BY
  count_comp DESC]]></relation>
            </properties>
          </object>
          <object caption='Query 4' id='_91AE2AB8354E42AC8F54172ABC624806'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query2' type='text'>WITH CleanedWords AS (
    SELECT
        REGEXP_EXTRACT_ALL(LOWER(nationality), r&apos;\b[a-zA-Z]+\b&apos;) AS words,
        is_owner
    FROM `ba775_a09.officers_and_owners_cleaned`
),
SplitWords AS (
    SELECT
        INITCAP(word) AS nationality,
        is_owner
    FROM CleanedWords,
    UNNEST(words) AS word
)
SELECT
    nationality,
    COUNT(*) AS total_officers,
    COUNT(CASE WHEN is_owner = TRUE THEN 1 END) AS owners_count,
    COUNT(CASE WHEN is_owner = FALSE THEN 1 END) AS non_owners_count,
    ROUND(COUNT(CASE WHEN is_owner = TRUE THEN 1 END) / COUNT(*) * 100, 2) AS ownership_rate
FROM SplitWords
WHERE nationality NOT IN (&apos;&apos;, &apos;-&apos;, &apos;unknown&apos;)
GROUP BY nationality
ORDER BY total_officers DESC
LIMIT 10</relation>
            </properties>
          </object>
          <object caption='Custom SQL Query1' id='_AC187287B90A419FB8557B3435DF7691'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='Custom SQL Query1' type='text'>SELECT
  occupation,
  COUNT(*) AS total_individuals,
  SUM(CASE WHEN LOWER(nationality) = &apos;british&apos; THEN 1 ELSE 0 END) AS british_count,
  SUM(CASE WHEN LOWER(nationality) != &apos;british&apos; THEN 1 ELSE 0 END) AS non_british_count,
  ROUND(SUM(CASE WHEN LOWER(nationality) = &apos;british&apos; THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS british_percentage,
  ROUND(SUM(CASE WHEN LOWER(nationality) != &apos;british&apos; THEN 1 ELSE 0 END) / COUNT(*) * 100, 2) AS non_british_percentage
FROM `ba775_a09.officers_and_owners_cleaned`
WHERE occupation IS NOT NULL
  AND occupation NOT LIKE &apos;none&apos;
  AND occupation NOT LIKE &apos;retired&apos;
  AND nationality IS NOT NULL
GROUP BY occupation
ORDER BY total_individuals DESC
LIMIT 20</relation>
            </properties>
          </object>
          <object caption='companies_cleaned' id='companies_cleaned_C77504BB12B149A0B7B4219F30255AE9'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='companies_cleaned' table='[ba775-a-09.ba775_a09].[companies_cleaned]' type='table' />
            </properties>
          </object>
          <object caption='companies_sic_code_cleaned' id='companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='companies_sic_code_cleaned' table='[ba775-a-09.ba775_a09].[companies_sic_code_cleaned]' type='table' />
            </properties>
          </object>
          <object caption='fillings_cleaned' id='fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='fillings_cleaned' table='[ba775-a-09.ba775_a09].[fillings_cleaned]' type='table' />
            </properties>
          </object>
          <object caption='officers_and_owners_cleaned' id='officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9'>
            <properties context=''>
              <relation connection='bigquery.124jc3j0wrukwg1g6jvyy0osuw64' name='officers_and_owners_cleaned' table='[ba775-a-09.ba775_a09].[officers_and_owners_cleaned]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[company_status]' />
              <expression op='[company_status (Custom SQL Query)]' />
            </expression>
            <first-end-point object-id='companies_cleaned_C77504BB12B149A0B7B4219F30255AE9' />
            <second-end-point object-id='_1D391B8F22B043BB966B7F5351F925F2' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[nationality]' />
              <expression op='[nationality (Custom SQL Query2)]' />
            </expression>
            <first-end-point object-id='officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9' />
            <second-end-point object-id='_91AE2AB8354E42AC8F54172ABC624806' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[occupation]' />
              <expression op='[occupation (Custom SQL Query1)]' />
            </expression>
            <first-end-point object-id='officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9' />
            <second-end-point object-id='_AC187287B90A419FB8557B3435DF7691' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[company_number]' />
              <expression op='[company_number (companies_sic_code_cleaned)]' />
            </expression>
            <first-end-point object-id='companies_cleaned_C77504BB12B149A0B7B4219F30255AE9' />
            <second-end-point object-id='companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[company_number (companies_sic_code_cleaned)]' />
              <expression op='[company_number (fillings_cleaned)]' />
            </expression>
            <first-end-point object-id='companies_sic_code_cleaned_82C257EB7F754CFCA50BFAC41459D5A9' />
            <second-end-point object-id='fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[company_number (fillings_cleaned)]' />
              <expression op='[company_number (officers_and_owners_cleaned)]' />
            </expression>
            <first-end-point object-id='fillings_cleaned_D2E8653A8D914A5DA41795F94DAB60EA' />
            <second-end-point object-id='officers_and_owners_cleaned_EC44145D9A524F8295CBB42BA3C5D7A9' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Asset Jump (Decadewise)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='2004-2013' datatype='integer' name='[Calculation_6646750118507905024]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD( IF YEAR([incorporation_date]) &gt;=2004 &#10;AND &#10;YEAR([incorporation_date]) &lt;=2013&#10;THEN [incorporation_date] END)' />
            </column>
            <column caption='2014-2024' datatype='integer' name='[Calculation_6646750118508212225]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(IF YEAR([incorporation_date]) &gt;= 2014 &#10;AND YEAR([incorporation_date]) &lt;= 2024 &#10;THEN [incorporation_date] END)' />
            </column>
            <column caption='Percentage increase (count)' datatype='real' name='[Calculation_6646750118511620098]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([Calculation_6646750118508212225] - [Calculation_6646750118507905024]) / [Calculation_6646750118507905024]' />
            </column>
            <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
            <column caption='Incorporation Date' datatype='date' name='[incorporation_date]' role='dimension' type='ordinal' />
            <column-instance column='[sic_division]' derivation='None' name='[none:sic_division:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Sic Division' datatype='string' name='[sic_division]' role='dimension' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[current_assets]' derivation='Sum' name='[sum:current_assets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6646750118511620098]' derivation='User' name='[usr:Calculation_6646750118511620098:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Dormant company&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' included-values='in-range'>
            <min>70950146.0</min>
            <max>184423437555.0</max>
          </filter>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' scope='cols' value='Percentage increase (Assets)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='p0%' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='#000000' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='#9727f7' />
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' />
              <lod column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_division:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>SIC Division:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_division:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>SIC Section:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Asset Change %:</run>
                <run fontcolor='#787878' fontsize='11'>Æ&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value='asterisk' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:qk]</cols>
      </table>
      <simple-id uuid='{DB93C12C-AF73-4B5A-8A94-DF015BCD8DE2}' />
    </worksheet>
    <worksheet name='Cities : Active / Dissolved Ratio'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='Calculation4' datatype='real' name='[Calculation_6775032341977165828]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([company_name]) / TOTAL(COUNTD([company_name]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' pivot='key' type='quantitative' />
            <column caption='companies_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' role='measure' type='quantitative' />
            <column caption='Company Name' datatype='string' name='[company_name]' role='dimension' type='nominal' />
            <column caption='Company Status' datatype='string' name='[company_status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
            <column-instance column='[company_status]' derivation='None' name='[none:company_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6775032341977165828]' derivation='User' name='[usr:Calculation_6775032341977165828:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Calculation_6775032341975179266:nk]' />
                  <groupfilter function='member' level='[none:Calculation_6775032341975179266:nk]' member='&quot;Other&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Liverpool&quot;</bucket>
              <bucket>&quot;Nottingham&quot;</bucket>
              <bucket>&quot;Sheffield&quot;</bucket>
              <bucket>&quot;Belfast&quot;</bucket>
              <bucket>&quot;Aberdeen&quot;</bucket>
              <bucket>%all%</bucket>
              <bucket>&quot;Cardiff&quot;</bucket>
              <bucket>&quot;Leicester&quot;</bucket>
              <bucket>&quot;York&quot;</bucket>
              <bucket>&quot;Glasgow&quot;</bucket>
              <bucket>&quot;London&quot;</bucket>
              <bucket>&quot;Manchester&quot;</bucket>
              <bucket>&quot;Bristol&quot;</bucket>
              <bucket>&quot;Leeds&quot;</bucket>
              <bucket>&quot;Birmingham&quot;</bucket>
              <bucket>&quot;Edinburgh&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Active&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Converted / Closed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Dissolved&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;In Administration&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Insolvency Proceedings&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Liquidation&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Receiver Action&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Removed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Voluntary Arrangement&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='15'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of extraterritorial organisations and bodies&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' scope='rows' value='Percent of Total Companies' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' value='77' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' value='#000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#9727f7' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' value='#9727f7' />
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' />
              <text column='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>City:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Company Status:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Count of companies_cleaned:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>% of TOTAL:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032341977165828:qk:3]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</cols>
      </table>
      <simple-id uuid='{4604622A-9E67-4C40-8C73-3978D6941E00}' />
    </worksheet>
    <worksheet name='Company Status vs SIC section'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' pivot='key' type='quantitative' />
            <column caption='companies_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' role='measure' type='quantitative' />
            <column caption='Company Status' datatype='string' name='[company_status]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
            <column-instance column='[company_status]' derivation='None' name='[none:company_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' filter-group='10'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_6775032341975179266:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Active&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Converted / Closed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Dissolved&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;In Administration&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Insolvency Proceedings&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Liquidation&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Receiver Action&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Removed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Voluntary Arrangement&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='15'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of extraterritorial organisations and bodies&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' scope='cols' value='#Companies' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#9727f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Company Status:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Sic Section:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>#Companies: &#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]</cols>
      </table>
      <simple-id uuid='{106F45BC-B718-4D64-82DF-4D3079B4881E}' />
    </worksheet>
    <worksheet name='Non British Nationalities Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='officers + owners' datatype='integer' name='[Calculation_6775032342002585612]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[officers]+[owners]' />
            </column>
            <column-instance column='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' pivot='key' type='quantitative' />
            <column caption='companies_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' role='measure' type='quantitative' />
            <column caption='Nationality' datatype='string' name='[nationality]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality]' derivation='None' name='[none:nationality:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Officers' datatype='integer' name='[officers]' role='measure' type='quantitative' />
            <column caption='Owners' datatype='integer' name='[owners]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' derivation='Count' name='[pcto:cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' filter-group='10'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_6775032341975179266:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_6775032342002585612])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;.&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;13/05/1981&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Abu Dhabi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Acottish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Afg&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Afghan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Afghanh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Albanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Algerian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Am&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;American / English&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;American / Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Amman&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Andorran&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Angolan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Anguillan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Antiguan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Antiguan/ British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Antiguans&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Arab&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Arabian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Arabic Uae&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Argentine&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Argentinian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Argentinian/Uruguayan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Armania&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Armenian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Armeniya&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Asian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Aus/Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Australian/Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Austrian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Autrian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Azerbaijani&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;B/English&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Back British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bahamian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bahraini&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Banghladeshi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bangladech&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bangladeshi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Barbadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belarusian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belaus&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belgian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belgian/South African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belizean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belizeano&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belizian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Belorus&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bengali&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Beninese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bermudian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bermudian Britsh Overseas Territories Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bermudian/British Oversea Territories Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bg&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bhutanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bielarusian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Black Caribbean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Black/British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Black/Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bolivian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bolivian - Colombian -Brasilian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bosnian Serb&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Botswanan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Botswanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Br&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brazilian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bri&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brisith/Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bristish Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brit/Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Britich English&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British  Citizone&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British - Indian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British (Northern Irish)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British (Other)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British / Cypriot&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British &amp; Austrian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British + Israeli&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British And New Zealand&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British German&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Island Of Jersey&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Korean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British New Zealandr&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Permanent Resident&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Protecter Person&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British Virgin Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British-African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British-Algerian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British-Irish-European&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British-Northern Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British.&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British/Canadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British/Northern Ireland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British/Northern Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;British/Philippine&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brizilian/British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Brtish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bruneian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Builder&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Building Contractor&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bulgarian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Bulgerian-English&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Burkina-Faso&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Burkinan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Burmese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Burundian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Business&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;C/E&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cambodian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cameroonian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Canada/Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Canadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Canadian With Us Residency&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Canadian/Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cape Verdean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Caribbean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cayman Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Central African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chairman&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chilean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chilian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chinese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chinese (Hk)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chinese (Hksar)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Chinese/American Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Antigua And Barbuda&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Bosnia And Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Kiribati&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Seychelles&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of The Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Trinidad And Tobago&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Citizen Of Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Colombian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Columbian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Comoran&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Company Director&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Company Secretary&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congloese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congoles&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congolese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congolese (Congo)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congolese (Drc)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Congorese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cook Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cornish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Costa Rican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Coventry&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Croatian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cuban&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymraeg&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymraeg - Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymraes&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymraes - Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymraes Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymreig&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymro&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymro -Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymro / Cymraes&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cymru&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cypriot&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Cypriot (Turkish)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Czech&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Czech Replublic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Danish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Director&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Djiboutian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dominican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Driver&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual - Bosnia-Herzegovinian &amp; Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual Australian-British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual British &amp; Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual British And Indian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual Citizen:Uk And Australia&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual Nationality - British And German&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual Nationality (Uk/India)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dual Us/Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Dutch&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;East Timorese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ecuadorean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Eg&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Egyptian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Emirati&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Engineer&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English (But Born In Germany)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English And Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English And Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English/Romanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;English/Serbian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Equatorial Guinean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Eritrean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Estonian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ethiopian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Eu&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Euopean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;European&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Falkland Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Faroese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Faroese (Danish)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Faroese Danish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Faroese/Danish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Faroses (Danish)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Fijian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Filipino&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Financial Adviser&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Finnish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Franca&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;French&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;French Canadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gabonese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gambian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gb British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gbr&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Georgian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;German&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;German/Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gerogian(British Citizen)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ghanaian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ghanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Gibraltarian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Greek&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Greek Us&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Greenlandic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Grenadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guadeloupe&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guatemalan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guernsey&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guinea Conakry&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guinean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Guyanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;H K Chinese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Haitian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hellinic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hk/Chinese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hksar&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Honduran&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hong Kong  China&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hong Konger&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hongkong&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Hungarian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Icelandic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Indian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Indonesian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Investigator&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Iranian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Iraqi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish (Of Uk Birth)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish / Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish And Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish Resident&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish Rsa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish/English Dual Nationality&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish/Iranian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Irish/Us Dual&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Isle Of Man&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Israel Palestine&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Israel South Africa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Israeli&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Italian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Italian/Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ivorian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Jamaican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Japanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Jersey&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Jewish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Joiner&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Jordanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kazakh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kenia&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kenyan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kenyan/British Resident&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kittitian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Koaren&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Korea&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Korean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kosovan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kotri&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Krygyzstanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kurdish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kurdish-Iraqi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kuwaiti&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Kyrgyz&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lalvian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lao&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lapanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Latvian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lebanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lebanese And French&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Liberian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Libyan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Liechtenstein Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lietuvos&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Lithuanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Litvanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;London&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Luxembourger&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Macanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Macau Sar&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Macedonian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Malagasy&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Malawian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Malayan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Malaysian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Maldivian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Malian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Maltese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Manager&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Managing Director&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Manx&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Maritius&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Marshallese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Martiniquais&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mauritanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mauritian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mexican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Moldovan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Monegasque&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mongolian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Montenegrin&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Montserratian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Moroccan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mosotho&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Mozambican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;N Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;N/A&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;N/Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Na&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Namibian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Napal&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nationality Unknown&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nauruan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nepalese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Netherlande&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;New Zealander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ngr&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ni-Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nicaraguan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nigerian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Nigerien&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Niuean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;None Stated&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;North American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;North Korean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Northern American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Northern Cypriot&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Northern Ireland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Northern Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Norwegian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Omani&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Omani Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Other&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Painter &amp; Decorator&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Pakistani&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Palauan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Palestinian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Panamanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Papua New Guinean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Paraguayan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Part Time Worker&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Persian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Peruvian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Physiotherapist&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Pitcairn Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Polish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Polish/British Dual Nationality&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Polish/Uk (Dual Nationality)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Portugese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Portuguese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;President&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Prydeinig&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Prydeinwr&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Puerto Rican&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Pwylaidd&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Qatari&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;R.O.C&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Repubilic Of Congo&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Republic Of Ireland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Republic Of Korean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Republic Of The Philippines&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Retailer&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Retired&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Rhodesian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Romanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Roumain&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Russian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Russian / Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Rwandan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Saesneg&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Saesnes&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Salvadorean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Salvadorian And Colombian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Salvak&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sammarinese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Samoan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sao Tomean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sar Hong Kong&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sarjevo&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Saudi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Saudi Arabian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Scotland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Scottish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Scottish / British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Scottish/Chinese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Secretary&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Senegalese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Serbian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Seychelloise&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sharjah&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sierra Leonean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Singaporean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Slovak&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sloven&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Slovenian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Slovenskai Republic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Solihull&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Solomon Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Somali&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South African / Portugese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South African/Israeli&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South Korean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;South Sudanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Southampton&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Spanish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Spanish/Chilean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sri Lankan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;St Helenian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;St Lucian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Stateless&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Sudanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Surinamese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Svensk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Swansea&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Swazi&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Swedish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Swiss&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Syrian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Taiwan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Taiwanese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tajik&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tamil Srilankan - British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tanzanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tartar&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tawain&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Thai&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Togolese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tongan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trimidad Tobago&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trindard &amp; Tobagon&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trinidad And Tabago&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trinidad And Tobago Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trinidad British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trinidadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Trinidadian And Tobagonian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Tunisian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Turkish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Turkish Curd&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Turkish Republic&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Turkmen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Turks And Caicos Islander&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;U.A.E&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;U.A.E. National&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;U.S.A.&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ugandan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ugoslavian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uinted Kingdom&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk - British Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk - English&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk (English)&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk / Us&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk / Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk &amp; Australia&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk &amp; Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk &amp; French&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk &amp; Swiss&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk And French&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk And South African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk And Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Brithish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Brittish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Citizen/British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Gb&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk New Zealand&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk-Australian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk-British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/ American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Canadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Gb&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Israel&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/South African&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Swiss&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Us&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uk/Usa Dual Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ukrainian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Ukranian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Arab Emerates&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Kindgom&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Kingdom Northern Ireland&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United Kingdoms Of Great Britain And Northern Irel&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United State Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United States &amp; British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United States Citizen &amp; British Subj&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United States Of America.&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;United States-American&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Unitred Kingdom&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Unknown&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uruguayan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us / Irish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us &amp; German&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us Citizen&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us Native&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Us Of America&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Usa&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Usa Canadian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Usa German&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Usbekistan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uzbek&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uzbekistanian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Uznek&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Venezolano&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Venezuelan&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Venezuelan &amp; Spanish&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Vietnamese&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Vincentian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Wallisian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Wel&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Welsh&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Welsh / British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;West Indian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;West Indies&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;White British&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Wn&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Wrexham&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Xxb&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Yemeni&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Yugoslav&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Yugoslavian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Zambian&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Zimbabwean&quot;' />
                  <groupfilter function='member' level='[none:nationality:nk]' member='&quot;Zwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='15'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of extraterritorial organisations and bodies&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' value='#9727f7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]' />
              <wedge-size column='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' />
              <size column='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' />
              <text column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]' />
              <text column='[federated.1lpix941yvmdkh1bllczo01uizke].[pcto:cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Nationality:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Number of Companies:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>% of Total Immigrant Owners:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[pcto:cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CB91F6BE-9D8C-4333-B979-E86B5248EFE2}' />
    </worksheet>
    <worksheet name='Ownership Rate for Nationalities'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium' fontsize='16'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='companies_cleaned' datatype='table' name='[__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9]' role='measure' type='quantitative' />
            <column caption='Nationalities - Non British' datatype='string' name='[nationality (Custom SQL Query2)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
            <column-instance column='[nationality (Custom SQL Query2)]' derivation='None' name='[none:nationality (Custom SQL Query2):nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[ownership_rate]' role='measure' type='quantitative' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[ownership_rate]' derivation='Sum' name='[sum:ownership_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_officers]' derivation='Sum' name='[sum:total_officers:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_officers]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' filter-group='10'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Calculation_6775032341975179266:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:nationality (Custom SQL Query2):nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:nationality (Custom SQL Query2):nk]' member='&quot;British&quot;' />
                <groupfilter function='member' level='[none:nationality (Custom SQL Query2):nk]' member='&quot;English&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='15'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of extraterritorial organisations and bodies&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]' scope='rows' value='#Officers' />
            <encoding attr='space' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' field-type='quantitative' fold='true' max='100.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' scope='rows' value='Ownership Rate' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]' value='bold' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eeebf1</color>
                <color>#ebe5f2</color>
                <color>#e8dff3</color>
                <color>#e6d9f4</color>
                <color>#e3d4f5</color>
                <color>#e0cef5</color>
                <color>#ddc8f6</color>
                <color>#dac2f7</color>
                <color>#d7bcf8</color>
                <color>#d5b6f9</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]' value='11' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]' value='#9727f7' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' value='#9727f7' />
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Nationalities - Non British:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Total #Officers:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Ownership Rate:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Nationalities - Non British:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Total #Officers:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Ownership Rate:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Nationalities - Non British:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Total #Officers:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Ownership Rate:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <_.fcp.PatternedLineMarks.true...format attr='mark-line-pattern' value='dashed' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lpix941yvmdkh1bllczo01uizke].[sum:total_officers:qk] + [federated.1lpix941yvmdkh1bllczo01uizke].[sum:ownership_rate:qk])</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]</cols>
      </table>
      <simple-id uuid='{4FB5C937-FF52-4C15-831C-C2F7DB374607}' />
    </worksheet>
    <worksheet name='Projection of Assets for SIC Sections'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='Period  - decade' datatype='string' name='[Period  (copy)_6775032342092308495]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2014 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2024 THEN &quot;2014-2024&quot;&#10;ELSEIF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2004 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2014 THEN &quot;2004-2014&quot;&#10;ELSEIF  DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2004 then &quot;&lt;2004&quot;&#10;ELSE &#10;    NULL&#10;END' />
            </column>
            <column-instance column='[Forecast Indicator]' derivation='Attribute' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[attr:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
            <column-instance column='[current_assets]' derivation='Sum' forecast-column-base='[sum:current_assets:qk]' forecast-column-type='forecast-value' name='[fVal:sum:current_assets:qk]' pivot='key' type='quantitative' />
            <column caption='Incorporation Date' datatype='date' name='[incorporation_date]' role='dimension' type='ordinal' />
            <column-instance column='[Period  (copy)_6775032342092308495]' derivation='None' name='[none:Period  (copy)_6775032342092308495:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[current_assets]' derivation='Sum' name='[sum:current_assets:qk]' pivot='key' type='quantitative' />
            <column-instance column='[incorporation_date]' derivation='Year-Trunc' name='[tyr:incorporation_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]'>
            <groupfilter function='member' level='[none:Period  (copy)_6775032342092308495:nk]' member='&quot;2014-2024&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Dormant company&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='ASC' using='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' />
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]' scope='cols' value='Incorporation Date' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[fVal:sum:current_assets:qk]' value='#9727f7' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]' value='#9727f7' />
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]' value='11' />
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[fVal:sum:current_assets:qk]' value='11' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[fVal:sum:current_assets:qk]' value='bold' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' />
              <lod column='[federated.1lpix941yvmdkh1bllczo01uizke].[attr:Forecast Indicator:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>SIC Section:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Year of Incorporation Date:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Forecast Indicator:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[attr:Forecast Indicator:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Current Assets:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[fVal:sum:current_assets:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[fVal:sum:current_assets:qk]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[tyr:incorporation_date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{AE245219-6E7E-477E-86E4-D24CA310769B}' />
    </worksheet>
    <worksheet name='Rank of SIC Sections (Decadewise)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='RANK_UNIQUE(SUM([Current Assets]), &apos;desc&apos;)' datatype='integer' name='[Calculation_6775032342082711566]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([current_assets]), &apos;desc&apos;)&#10;&#10;&#10;&#10;&#10;&#10;&#10;'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Period  - decade' datatype='string' name='[Period  (copy)_6775032342092308495]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2014 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2024 THEN &quot;2014-2024&quot;&#10;ELSEIF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2004 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2014 THEN &quot;2004-2014&quot;&#10;ELSEIF  DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2004 then &quot;&lt;2004&quot;&#10;ELSE &#10;    NULL&#10;END' />
            </column>
            <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
            <column caption='Incorporation Date' datatype='date' name='[incorporation_date]' role='dimension' type='ordinal' />
            <column-instance column='[Period  (copy)_6775032342092308495]' derivation='None' name='[none:Period  (copy)_6775032342092308495:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6775032342082711566]' derivation='User' name='[usr:Calculation_6775032342082711566:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1lpix941yvmdkh1bllczo01uizke].[sic_section]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Period  (copy)_6775032342092308495:nk]' member='&quot;2004-2014&quot;' />
              <groupfilter function='member' level='[none:Period  (copy)_6775032342092308495:nk]' member='&quot;2014-2024&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;2004&quot;</bucket>
              <bucket>&quot;2004-2014&quot;</bucket>
              <bucket>&quot;2014-2024&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Administrative and support service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Agriculture, forestry and fishing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Arts, entertainment and recreation&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Dormant company&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Education&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Electricity, gas, steam and air conditioning supply&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Human health and social work activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Information and communication&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Mining and quarrying&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Other service activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Professional, scientific and technical activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Public administration and defence; compulsory social security&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Real estate activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Transportation and storage&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
              <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Professional, scientific and technical activities&quot;</bucket>
              <bucket>&quot;Real estate activities&quot;</bucket>
              <bucket>&quot;Information and communication&quot;</bucket>
              <bucket>&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;</bucket>
              <bucket>&quot;Construction&quot;</bucket>
              <bucket>&quot;Administrative and support service activities&quot;</bucket>
              <bucket>&quot;Financial and insurance activities&quot;</bucket>
              <bucket>&quot;Manufacturing&quot;</bucket>
              <bucket>&quot;Human health and social work activities&quot;</bucket>
              <bucket>&quot;Other service activities&quot;</bucket>
              <bucket>&quot;Accommodation and food service activities&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Transportation and storage&quot;</bucket>
              <bucket>&quot;Arts, entertainment and recreation&quot;</bucket>
              <bucket>&quot;Agriculture, forestry and fishing&quot;</bucket>
              <bucket>&quot;Education&quot;</bucket>
              <bucket>&quot;Electricity, gas, steam and air conditioning supply&quot;</bucket>
              <bucket>&quot;Water supply; sewerage, waste management and remediation activities&quot;</bucket>
              <bucket>&quot;Dormant company&quot;</bucket>
              <bucket>&quot;Mining and quarrying&quot;</bucket>
              <bucket>&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;</bucket>
              <bucket>&quot;Public administration and defence; compulsory social security&quot;</bucket>
              <bucket>&quot;Activities of extraterritorial organisations and bodies&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' value='130' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='212' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342082711566:qk:2]' max='21' min='1' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eeebf1</color>
                <color>#ebe5f2</color>
                <color>#e8dff3</color>
                <color>#e6d9f4</color>
                <color>#e3d4f5</color>
                <color>#e0cef5</color>
                <color>#ddc8f6</color>
                <color>#dac2f7</color>
                <color>#d7bcf8</color>
                <color>#d5b6f9</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342082711566:qk:2]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Period  - decade:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Sic Section:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>RANK:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342082711566:qk:2]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</cols>
      </table>
      <simple-id uuid='{F122BA2E-6606-4320-BB7C-5A7C6AA9948D}' />
    </worksheet>
    <worksheet name='SIC Section vs assets (Decadewise)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#4e79a7' fontname='Tableau Medium'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='Period  - decade' datatype='string' name='[Period  (copy)_6775032342092308495]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2014 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt;= 2024 THEN &quot;2014-2024&quot;&#10;ELSEIF DATEPART(&apos;year&apos;, [incorporation_date]) &gt;= 2004 AND DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2014 THEN &quot;2004-2014&quot;&#10;ELSEIF  DATEPART(&apos;year&apos;, [incorporation_date]) &lt; 2004 then &quot;&lt;2004&quot;&#10;ELSE &#10;    NULL&#10;END' />
            </column>
            <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
            <column caption='Incorporation Date' datatype='date' name='[incorporation_date]' role='dimension' type='ordinal' />
            <column-instance column='[Period  (copy)_6775032342092308495]' derivation='None' name='[none:Period  (copy)_6775032342092308495:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[current_assets]' derivation='Sum' name='[sum:current_assets:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Period  (copy)_6775032342092308495:nk]' member='&quot;2004-2014&quot;' />
              <groupfilter function='member' level='[none:Period  (copy)_6775032342092308495:nk]' member='&quot;2014-2024&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;2014-2024&quot;</bucket>
              <bucket>&quot;2004-2014&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:sic_section:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:sic_section:nk]' member='%null%' />
                <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Activities of extraterritorial organisations and bodies&quot;' />
                <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Dormant company&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-size' value='11' />
            <format attr='color' value='#9727f7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='bold' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='bold' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='11' />
            <format attr='color' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='#9727f7' />
            <format attr='font-weight' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontsize='11'>Period  - decade:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Sic Section:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878' fontsize='11'>Current Assets:&#9;</run>
                <run bold='true' fontsize='11'><![CDATA[<[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</rows>
        <cols>[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]</cols>
      </table>
      <simple-id uuid='{4AD1B36C-2BE0-4FB5-A4B3-3EBB9C660D56}' />
    </worksheet>
    <worksheet name='SIC Section vs current assets vs city'>
      <table>
        <view>
          <datasources>
            <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
          </datasources>
          <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
            <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='Company Status' datatype='string' name='[company_status]' role='dimension' type='nominal' />
            <column caption='Current Assets' datatype='real' name='[current_assets]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
            <column-instance column='[company_status]' derivation='None' name='[none:company_status:nk]' pivot='key' type='nominal' />
            <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
            <column caption='Office Address' datatype='string' name='[office_address]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
                <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
                <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
                <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
                <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
                <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
                <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
                <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
                <alias key='&quot;Information and communication&quot;' value='IT' />
                <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
                <alias key='&quot;Other service activities&quot;' value='Service' />
                <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
                <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
                <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
                <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
                <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
                <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
              </aliases>
            </column>
            <column-instance column='[current_assets]' derivation='Sum' name='[sum:current_assets:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]'>
            <groupfilter function='member' level='[none:Calculation_6775032341975179266:nk]' member='&quot;Cardiff&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Active&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Converted / Closed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Dissolved&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;In Administration&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Insolvency Proceedings&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Liquidation&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Receiver Action&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Registered&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Removed&quot;' />
              <groupfilter function='member' level='[none:company_status:nk]' member='&quot;Voluntary Arrangement&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Dissolved&quot;</bucket>
              <bucket>&quot;Active&quot;</bucket>
              <bucket>&quot;Converted / Closed&quot;</bucket>
              <bucket>&quot;In Administration&quot;</bucket>
              <bucket>&quot;Liquidation&quot;</bucket>
              <bucket>&quot;Receiver Action&quot;</bucket>
              <bucket>&quot;Registered&quot;</bucket>
              <bucket>&quot;Voluntary Arrangement&quot;</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</column>
            <column>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</rows>
        <cols>([federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk] * [federated.1lpix941yvmdkh1bllczo01uizke].[sum:current_assets:qk])</cols>
      </table>
      <simple-id uuid='{B2A656CC-0F10-4324-974D-8F017099407B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='City wise analysis &amp; Ownership Demographics'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#204db2'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='color' value='#4e79a7' />
          <format attr='font-weight' value='bold' />
          <format attr='text-align' value='center' />
          <format attr='font-family' value='Tableau Medium' />
          <format attr='border-width' value='0' />
          <format attr='border-style' value='none' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='font-size' value='14' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#333333' />
          <format attr='text-align' value='center' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
      </datasources>
      <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
        <column caption='city' datatype='string' name='[Calculation_6775032341975179266]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF CONTAINS([office_address], &quot;Aberdeen&quot;) THEN &quot;Aberdeen&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Armagh&quot;) THEN &quot;Armagh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bangor&quot;) THEN &quot;Bangor&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bath&quot;) THEN &quot;Bath&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Belfast&quot;) THEN &quot;Belfast&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Birmingham&quot;) THEN &quot;Birmingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bradford&quot;) THEN &quot;Bradford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Brighton and Hove&quot;) THEN &quot;Brighton and Hove&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Bristol&quot;) THEN &quot;Bristol&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cambridge&quot;) THEN &quot;Cambridge&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Canterbury&quot;) THEN &quot;Canterbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Cardiff&quot;) THEN &quot;Cardiff&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Carlisle&quot;) THEN &quot;Carlisle&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chelmsford&quot;) THEN &quot;Chelmsford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chester&quot;) THEN &quot;Chester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Chichester&quot;) THEN &quot;Chichester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Coventry&quot;) THEN &quot;Coventry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derby&quot;) THEN &quot;Derby&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Derry&quot;) THEN &quot;Derry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Dundee&quot;) THEN &quot;Dundee&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Durham&quot;) THEN &quot;Durham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Edinburgh&quot;) THEN &quot;Edinburgh&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ely&quot;) THEN &quot;Ely&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Exeter&quot;) THEN &quot;Exeter&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Glasgow&quot;) THEN &quot;Glasgow&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Gloucester&quot;) THEN &quot;Gloucester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Hereford&quot;) THEN &quot;Hereford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Inverness&quot;) THEN &quot;Inverness&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Kingston upon Hull&quot;) THEN &quot;Kingston upon Hull&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lancaster&quot;) THEN &quot;Lancaster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leeds&quot;) THEN &quot;Leeds&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Leicester&quot;) THEN &quot;Leicester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lichfield&quot;) THEN &quot;Lichfield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lincoln&quot;) THEN &quot;Lincoln&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Lisburn&quot;) THEN &quot;Lisburn&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Liverpool&quot;) THEN &quot;Liverpool&quot;&#10;ELSEIF CONTAINS([office_address], &quot;London&quot;) THEN &quot;London&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Londonderry&quot;) THEN &quot;Londonderry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Manchester&quot;) THEN &quot;Manchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newcastle upon Tyne&quot;) THEN &quot;Newcastle upon Tyne&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newport&quot;) THEN &quot;Newport&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Newry&quot;) THEN &quot;Newry&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Norwich&quot;) THEN &quot;Norwich&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Nottingham&quot;) THEN &quot;Nottingham&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Oxford&quot;) THEN &quot;Oxford&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Perth&quot;) THEN &quot;Perth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Peterborough&quot;) THEN &quot;Peterborough&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Plymouth&quot;) THEN &quot;Plymouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Portsmouth&quot;) THEN &quot;Portsmouth&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Preston&quot;) THEN &quot;Preston&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Ripon&quot;) THEN &quot;Ripon&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Albans&quot;) THEN &quot;St Albans&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Asaph&quot;) THEN &quot;St Asaph&quot;&#10;ELSEIF CONTAINS([office_address], &quot;St Davids&quot;) THEN &quot;St Davids&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Salisbury&quot;) THEN &quot;Salisbury&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sheffield&quot;) THEN &quot;Sheffield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Southampton&quot;) THEN &quot;Southampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stirling&quot;) THEN &quot;Stirling&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Stoke-on-Trent&quot;) THEN &quot;Stoke-on-Trent&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Sunderland&quot;) THEN &quot;Sunderland&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Swansea&quot;) THEN &quot;Swansea&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Truro&quot;) THEN &quot;Truro&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wakefield&quot;) THEN &quot;Wakefield&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wells&quot;) THEN &quot;Wells&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Westminster&quot;) THEN &quot;Westminster&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Winchester&quot;) THEN &quot;Winchester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Wolverhampton&quot;) THEN &quot;Wolverhampton&quot;&#10;ELSEIF CONTAINS([office_address], &quot;Worcester&quot;) THEN &quot;Worcester&quot;&#10;ELSEIF CONTAINS([office_address], &quot;York&quot;) THEN &quot;York&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
        </column>
        <column caption='Company Status' datatype='string' name='[company_status]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_6775032341975179266]' derivation='None' name='[none:Calculation_6775032341975179266:nk]' pivot='key' type='nominal' />
        <column-instance column='[company_status]' derivation='None' name='[none:company_status:nk]' pivot='key' type='nominal' />
        <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
        <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
            <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
            <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
            <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
            <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
            <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
            <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
            <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
            <alias key='&quot;Information and communication&quot;' value='IT' />
            <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
            <alias key='&quot;Other service activities&quot;' value='Service' />
            <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
            <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
            <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
            <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
            <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
            <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98124' id='22' param='vert' type-v2='layout-flow' w='98924' x='538' y='938'>
            <zone h='4807' id='23' type-v2='title' w='98924' x='538' y='938'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93317' id='7' param='horz' type-v2='layout-flow' w='98924' x='538' y='5745'>
              <zone h='93317' id='5' type-v2='layout-basic' w='89705' x='538' y='5745'>
                <zone h='50057' id='10' name='Cities : Active / Dissolved Ratio' w='58183' x='538' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43260' id='12' name='Company Status vs SIC section' w='44843' x='538' y='55802'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='43260' id='16' name='Ownership Rate for Nationalities' w='44862' x='45381' y='55802'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='50057' id='18' name='Non British Nationalities Distribution' w='31522' x='58721' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='137' h='93317' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9219' x='90243' y='5745'>
                <zone h='20076' id='11' name='Cities : Active / Dissolved Ratio' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='filter' w='9219' x='90243' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='13013' id='13' mode='checkdropdown' name='Company Status vs SIC section' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' type-v2='filter' w='9219' x='90243' y='25821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20076' id='14' name='Company Status vs SIC section' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type-v2='filter' w='9219' x='90243' y='38834'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20076' id='15' name='Company Status vs SIC section' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type-v2='color' w='9219' x='90243' y='58910'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='20076' id='19' name='Non British Nationalities Distribution' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]' type-v2='color' w='9219' x='90243' y='78986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontcolor='#204db2'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98124' id='30' param='vert' type-v2='layout-flow' w='98924' x='538' y='938'>
                <zone h='4807' id='23' type-v2='title' w='98924' x='538' y='938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20076' id='11' mode='checkdropdown' name='Cities : Active / Dissolved Ratio' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='filter' w='9219' x='90243' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50057' id='10' is-fixed='true' name='Cities : Active / Dissolved Ratio' w='58183' x='538' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50057' id='18' is-fixed='true' name='Non British Nationalities Distribution' w='31522' x='58721' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20076' id='19' name='Non British Nationalities Distribution' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]' type-v2='color' w='9219' x='90243' y='78986'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13013' id='13' mode='checkdropdown' name='Company Status vs SIC section' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' type-v2='filter' w='9219' x='90243' y='25821'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20076' id='14' mode='checkdropdown' name='Company Status vs SIC section' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type-v2='filter' w='9219' x='90243' y='38834'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43260' id='12' is-fixed='true' name='Company Status vs SIC section' w='44843' x='538' y='55802'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20076' id='15' name='Company Status vs SIC section' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type-v2='color' w='9219' x='90243' y='58910'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43260' id='16' is-fixed='true' name='Ownership Rate for Nationalities' w='44862' x='45381' y='55802'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{378B236B-2BC0-4A02-BE53-49DBA318FB26}' />
    </dashboard>
    <dashboard name='Comprehensive Analysis of UK Corporations' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759' fontsize='22'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97866' id='1' param='vert' removable='false' type-v2='layout-flow' w='98924' x='538' y='1067'>
            <zone h='5333' id='3' type-v2='title' w='98924' x='538' y='1067' />
            <zone h='13467' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98924' x='538' y='6400' />
            <zone h='79066' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98924' x='538' y='19867'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='INDUSTRIAL INSIGHTS OF UK COMPANIES' captured-sheet='Industrial Insights of UK Companies' id='2'>
                    <capturedDeltas>
                      <worksheet name='Asset Jump (Decadewise)'>
                        <alphabetic-sort column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' direction='ASC' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='BOOMING INDUSTRIES' captured-sheet='Industrial Insights of UK Companies' id='3'>
                    <capturedDeltas>
                      <worksheet name='Asset Jump (Decadewise)'>
                        <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]'>
                          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Projection of Assets for SIC Sections'>
                        <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]'>
                          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Accommodation and food service activities&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Construction&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Financial and insurance activities&quot;' />
                            <groupfilter function='member' level='[none:sic_section:nk]' member='&quot;Water supply; sewerage, waste management and remediation activities&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='CITY WISE ANALYSIS AND DEMOGRAPHIC DISTRIBUTION OF OWNERS' captured-sheet='City wise analysis &amp; Ownership Demographics' id='6' />
                  <story-point caption='CARDIFF' captured-sheet='City wise analysis &amp; Ownership Demographics' id='7'>
                    <capturedDeltas>
                      <worksheet name='Company Status vs SIC section'>
                        <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]'>
                          <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
                            <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                              <groupfilter function='member' level='[none:Calculation_6775032341975179266:nk]' member='&quot;Cardiff&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Non British Nationalities Distribution'>
                        <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]'>
                          <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
                            <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                              <groupfilter function='member' level='[none:Calculation_6775032341975179266:nk]' member='&quot;Cardiff&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ownership Rate for Nationalities'>
                        <filter class='categorical' column='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]'>
                          <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
                            <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[companies_cleaned_C77504BB12B149A0B7B4219F30255AE9])' function='order' user:ui-marker='order'>
                              <groupfilter function='member' level='[none:Calculation_6775032341975179266:nk]' member='&quot;Cardiff&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                            </groupfilter>
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A6D3D419-F895-41AA-98B4-B3E9E6F0E6C1}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Industrial Insights of UK Companies'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#204db2' fontname='Tableau Semibold'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='companies_cleaned_partitioned_by_year+ (ba775_a09)' name='federated.1lpix941yvmdkh1bllczo01uizke' />
      </datasources>
      <datasource-dependencies datasource='federated.1lpix941yvmdkh1bllczo01uizke'>
        <column-instance column='[sic_section]' derivation='None' name='[none:sic_section:nk]' pivot='key' type='nominal' />
        <column caption='Sic Section' datatype='string' name='[sic_section]' role='dimension' type='nominal'>
          <aliases>
            <alias key='&quot;Accommodation and food service activities&quot;' value='Hospitality' />
            <alias key='&quot;Activities of households as employers; undifferentiated goods-and services-producing activities of households for own use&quot;' value='Household' />
            <alias key='&quot;Administrative and support service activities&quot;' value='Administration' />
            <alias key='&quot;Agriculture, forestry and fishing&quot;' value='Agribusiness' />
            <alias key='&quot;Arts, entertainment and recreation&quot;' value='Entertainment' />
            <alias key='&quot;Electricity, gas, steam and air conditioning supply&quot;' value='Utilities' />
            <alias key='&quot;Financial and insurance activities&quot;' value='Finance' />
            <alias key='&quot;Human health and social work activities&quot;' value='Healthcare' />
            <alias key='&quot;Information and communication&quot;' value='IT' />
            <alias key='&quot;Mining and quarrying&quot;' value='Mining' />
            <alias key='&quot;Other service activities&quot;' value='Service' />
            <alias key='&quot;Professional, scientific and technical activities&quot;' value='Research and Development' />
            <alias key='&quot;Public administration and defence; compulsory social security&quot;' value='Security' />
            <alias key='&quot;Real estate activities&quot;' value='Real Estate' />
            <alias key='&quot;Transportation and storage&quot;' value='Transportation' />
            <alias key='&quot;Water supply; sewerage, waste management and remediation activities&quot;' value='Water Treatment' />
            <alias key='&quot;Wholesale and retail trade; repair of motor vehicles and motorcycles&quot;' value='Wholesale and Retail' />
          </aliases>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98124' id='15' param='vert' type-v2='layout-flow' w='98924' x='538' y='938'>
            <zone h='4807' id='16' type-v2='title' w='98924' x='538' y='938'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93317' id='7' param='horz' type-v2='layout-flow' w='98924' x='538' y='5745'>
              <zone h='93317' id='5' type-v2='layout-basic' w='88157' x='538' y='5745'>
                <zone h='38557' id='3' name='Projection of Assets for SIC Sections' w='45381' x='43314' y='60505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='38557' id='10' name='SIC Section vs assets (Decadewise)' w='42776' x='538' y='60505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='54760' id='12' name='Rank of SIC Sections (Decadewise)' w='34116' x='538' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='54760' id='13' name='Asset Jump (Decadewise)' w='54041' x='34654' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='93317' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='10767' x='88695' y='5745'>
                <zone h='52286' id='9' name='Projection of Assets for SIC Sections' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='color' w='10767' x='88695' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7738' id='11' name='SIC Section vs assets (Decadewise)' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' type-v2='color' w='10767' x='88695' y='58031'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6096' id='8' mode='checkdropdown' name='Projection of Assets for SIC Sections' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='filter' values='all' w='10767' x='88695' y='65769'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontcolor='#204db2' fontname='Tableau Semibold'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98124' id='23' param='vert' type-v2='layout-flow' w='98924' x='538' y='938'>
                <zone h='4807' id='16' type-v2='title' w='98924' x='538' y='938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54760' id='12' is-fixed='true' name='Rank of SIC Sections (Decadewise)' w='34116' x='538' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54760' id='13' is-fixed='true' name='Asset Jump (Decadewise)' w='54041' x='34654' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38557' id='10' is-fixed='true' name='SIC Section vs assets (Decadewise)' w='42776' x='538' y='60505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7738' id='11' name='SIC Section vs assets (Decadewise)' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' type-v2='color' w='10767' x='88695' y='58031'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6096' id='8' mode='checkdropdown' name='Projection of Assets for SIC Sections' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='filter' values='all' w='10767' x='88695' y='65769'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38557' id='3' is-fixed='true' name='Projection of Assets for SIC Sections' w='45381' x='43314' y='60505'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='52286' id='9' name='Projection of Assets for SIC Sections' pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type-v2='color' w='10767' x='88695' y='5745'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DBE12A29-808C-4383-9623-FDA350093205}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='51'>
    <window class='worksheet' name='SIC Section vs assets (Decadewise)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F3488463-F435-437F-B680-26C115D94E62}' />
    </window>
    <window class='worksheet' name='Projection of Assets for SIC Sections'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[avg:current_assets:qk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[yr:incorporation_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D0FD5FB-830F-40CB-8611-F252D650E551}' />
    </window>
    <window class='worksheet' name='Company Status vs SIC section'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' type='filter' />
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status (companies_cleaned_partitioned_by_year1):nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_type:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[yr:date_of_cessation:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C230C771-D726-49B5-ADCC-FBE12DF65D71}' />
    </window>
    <window class='worksheet' name='SIC Section vs current assets vs city'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B338907-1B04-4AD7-BF8E-AF0D0975F00E}' />
    </window>
    <window class='worksheet' name='Non British Nationalities Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5F77325F-CC36-4AE6-893A-5279F2A56940}' />
    </window>
    <window class='dashboard' name='Industrial Insights of UK Companies'>
      <viewpoints>
        <viewpoint name='Asset Jump (Decadewise)' />
        <viewpoint name='Projection of Assets for SIC Sections'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Rank of SIC Sections (Decadewise)' />
        <viewpoint name='SIC Section vs assets (Decadewise)'>
          <highlight>
            <color-one-way>
              <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{2D144A16-29A7-4124-BA2D-DF7A9A877697}' />
    </window>
    <window class='dashboard' name='City wise analysis &amp; Ownership Demographics'>
      <viewpoints>
        <viewpoint name='Cities : Active / Dissolved Ratio'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Company Status vs SIC section' />
        <viewpoint name='Non British Nationalities Distribution'>
          <zoom type='entire-view' />
          <highlight field='[federated.1lpix941yvmdkh1bllczo01uizke].[__tableau_internal_object_id__].[cnt:companies_cleaned_C77504BB12B149A0B7B4219F30255AE9:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Ownership Rate for Nationalities'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{3880BC68-5EC2-40E9-9F68-F22A82CCCBA0}' />
    </window>
    <window class='dashboard' maximized='true' name='Comprehensive Analysis of UK Corporations'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{2F3B3AD4-15CF-4BB9-B269-2DBD3E97D815}' />
    </window>
    <window class='worksheet' hidden='true' name='Asset Jump (Decadewise)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_division:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118507905024:ok]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6646750118511620098:ok]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[yr:incorporation_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABCC8492-F93A-4F3D-969E-C8ABFB8D1964}' />
    </window>
    <window class='worksheet' hidden='true' name='Cities : Active / Dissolved Ratio'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='filter' />
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_6775032341975179266:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_name:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:company_status:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{80E08FB9-68B1-4CE1-8490-AE727B5ED0AA}' />
    </window>
    <window class='worksheet' hidden='true' name='Ownership Rate for Nationalities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[:Measure Names]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality (Custom SQL Query2):nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:nationality:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[yr:date_of_appointment:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C1EBBB0-F5C2-4DE4-B0F7-D5C8E091B6A4}' />
    </window>
    <window class='worksheet' hidden='true' name='Rank of SIC Sections (Decadewise)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342082711566:qk:2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Calculation_1883912039113248768:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:Period  (copy)_6775032342092308495:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[none:sic_section:nk]</field>
            <field>[federated.1lpix941yvmdkh1bllczo01uizke].[usr:Calculation_6775032342082711566:qk:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{43DBBE97-683B-466C-BDA5-B7ACD5E658D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='City wise analysis &amp; Ownership Demographics' width='384'>
      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
      Aa12LhiDHBaCAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Company Status vs SIC section' width='384'>
      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
      /fv36xbmKSoq4ujRo7ossgcPHsTQ0FC3NkVjcX1lu5iYGLy8vJAkCVmWiYqK4ueffwbq1tiQ
      JIn09HTWrl1LamoqXl5eGBoakpCQQElJCba2tuTn5/Prr7/i4+PT4AOQsiyTn5/Pvn378PLy
      wsDAgOrqanbv3q37/IqLi3FxcaGoqIh169YRHx+Pm5sbpqampKWlcenSJZydnamuriYyMhIX
      FxfdIk8NRavVEhcXR2RkJBcvXsTV1RVjY2OqqqrYtm0bBw4cwN7eHmtra2RZJjY2lv/973/U
      1NTg5uaGJEkcOHAAGxsbjI2NOXv2LKmpqbrP+IGQBUGW5fnz58vt2rWTJ02aJPv7+8tXrlyR
      t2zZIg8cOFCWZVn+9ttv5S5dushVVVUNXNI6V65ckVu0aCE/88wz8vjx4+XPPvtMlmVZnjNn
      jtyxY0d54sSJclBQkJyVlSWfPn1aDgwMlGVZlg8cOCD7+PjIubm5DVn8G2g0Gvmdd96RXVxc
      5J49e8oajUaWZVnet2+f7OXlJc+aNUt2d3eXf/31V7m0tFQODg6Wn332WTksLEyeOXOmrNVq
      5VmzZsmffPKJrNFo5PHjx8tTp06VtVptA9dMllesWCH7+vrKXl5ecnFxsSzLsnz58mXZ3t5e
      HjdunDx+/Hh56dKlcnV1tTxo0CB54MCB8sCBA+WIiAhZrVbL3333nfzMM8/IWq1W/uyzz+S+
      ffvKlZWVDVwrWd66dascEBAgT548WQ4PD5dHjx4ta7Va+e2335ZDQ0Pl559/Xm7Tpo2ck5Mj
      Hzt2TPbw8JBnzZole3t7y9u2bZNlWZbbtWsnx8bGylevXpXbtWsnb9q06YF+ZiIACHJNTY3s
      6+srR0dHy1qtVh4+fLj81Vdf6QJASkqK7O3tLcfExDR0UXWOHz8ut2/fXvdFKct19fDw8JDj
      4uJkrVYrDxo0SF6xYoUuAJSUlMjt2rWTN2zY0IAlvzm1Wi3PmzdPXrVqlS4AaLVaecSIEfJX
      X30la7VaecmSJfLo0aPln3/+We7Vq5dcW1srX7p0SRfQrgeAXbt2yYGBgXJeXl5DV0uWZVle
      tGiRHBkZKfv7++sCQFRUlBwaGlrv80tISJDd3d3lqqoquaioSPb29pYTExN1AeDMmTNyy5Yt
      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
    </thumbnail>
    <thumbnail height='384' name='Comprehensive Analysis of UK Corporations' width='384'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Industrial Insights of UK Companies' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Non British Nationalities Distribution' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd5xddZ3/8dc5t7epKZNM+iSTRnpCAmlSEoiiKIKuBffhLsq62FZFWd0f
      YINFXQFlQRTcUBRFkERCCIQUCJMGKSSTNqmTNpmZTL/93nPO749JJglJpt465/N8PPKAzG3f
      y+j3fc63fL6KYRgGQgghTEdNdwOEEEKkhwSAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKY
      lASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEKYlASAEEJ0wsGDB/nr
      X/+KYRhdfu3OnTupqalJQqt6xpruBgghRDZYtmwZp06d4tZbb8Xv91NZWUl1dTUjRozg0KFD
      fOQjHwHg3XffZeDAgQwdOpSmpiaOHTtGUVERbrebeDzO5s2b6dOnD0OGDGHTpk34fD4mTZrE
      gQMHOHLkCBMmTGDgwIEp+U6W+++///6UfJIQQmSpWCzGO++8w9y5c6mqquLUqVOUlZURDAbZ
      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
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE03HeagAAAXdJREFU
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACE
      EMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKkJACEEMKk/j/9C2Jp/Brw
      xwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Projection of Assets for SIC Sections' width='384'>
      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
      7NgxTp8+zfDwMMPDw1y+fJmhoSH6+vrYu3cvIyMjPP7441vWaNnX18c999zD/Pw8vu8zPj7O
      M888gxCCIAgYHh4mCAL2799PkiRMTk6ye/duarUa991335akGaC/v5977rmHubk5crkc4+Pj
      PP300yilSJKEw4cP02w2OXDgAB9//DH3338/DzzwAO+99x6HDh3akjRblsXhw4cpl8tcuXIF
      rTUHDx7koYce4tSpUzz22GMcOHCAMAwJw5C5uTmeeeaZzjPdTjtiXEArSJKEP/3TP2Xnzp0M
      Dg521Nj3/U7XxDbnz5+nUCggpaRarW5Vkjtpef311/niF7+IlLLThVIIsao/+Be+8AXCMOTP
      /uzPaDQaW5bmIAj41re+xcGDB+np6ekYdc/zVvV5bzQanT7Or7zyylYlGSEE4+PjPP/88/zM
      z/wMcRzj+37nXa/VTfijjz5iaGhoS3vbKKV44YUXsG2bw4cPL8vXcRwve9dtF8bMzAyu626p
      O0Upxbe//W183+fgwYM3TPfw8DDvv/8+3/nOd1hYWNiqJANw8eJFXnnlFb74xS8SxzGe53Xy
      iNaaV199ldnZWR555JFObybP8267m9AIwApeffVVPvvZz3Lw4EEg9TsHQdCp3idJ0lHqcrlM
      pVJhamqKqampLUtzvV7nzJkz/OzP/iy2bdPf38/IyAjT09PkcrlOeqWUSClRSjE0NMSOHTu2
      xO/Y5uWXX+bxxx9n//79ALRarY4/vVQqLXvX+/btQynF/v37O+0cW4GUktdee40vf/nLFItF
      du3axcjICI1GA611J71KKaSUaK05e/YsR48e3bI0A7z55pscOHCABx54AK01UkqazSaXLl2i
      r69vWZqvX7/O/v37OXbsGDMzM1ua7uPHjzM0NMTRo0c7whQEAZcvX2bnzp3L8ojneXzpS1/i
      2LFjDAwMbFmaoyji7bff5itf+Qqe5zEwMMDIyAhzc3O4rsuZM2colUo88sgjnXfe/i36+/tv
      a1qNC2gFCwsLjI+Pc+XKFYrFIgcOHODEiRMcOHCA/v5+Tp48iZSS8fFxhoaGGBwcpLe3l8HB
      wS1zp7RaLaanpxkdHWVubo6jR49y9epVRkdHefLJJxkdHeXChQtEUdRpgDp9+jT9/f3ce++9
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='SIC Section vs assets (Decadewise)' width='384'>
      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
      zyJJEmaz+ZYHa7PZfMt12Ww2srOzS7zn9OnTnDp1ikaNGnHp0iW6du1KTk6Ocx1FRUUlljV+
      /HiOHj16x8/RuHFjBgwYAIBer6egoOCWn0EQhH8+l0kAAM2aNeOPP/7AbrcTHx9P//79OXv2
      LJIkceTIEZ544gnkcjkOh4OJEycSGxtLt27dyMvLQ6vVMmjQIOLi4mjXrh1nz54tsWy73c7s
      2bN54okniIuLY+fOnUiSxOLFi2nWrBnNmjVjxowZAEycOJGmTZvSpEkTZs6cWeqAvX37dlq1
      akWLFi34+OOPSySco0eP0q5dO5o1a0bnzp25cuUKFouF/v378/zzz9O8eXNat27NtWvXMJlM
      vP322zRu3JjnnnvultukTp06jBo1ikWLFhEQEMCFCxewWq2MGzeOli1b0q5dO06ePMkHH3zA
      iRMnGDt2LK1bt8ZisTBt2jSaNWtGbGws7733HjabjYsXL7J+/foy3nOCIFRELpUA6tati1wu
      59KlSxw5coRBgwah1+vJzc3l6NGjtGjRwvnanj17snbtWq5cucL58+dZuHAhFouF3bt389RT
      TzFx4sQSB+ZTp06xcOFCtm/fzkcffcTkyZPR6/XMmjWLt99+m02bNtGxY0cAepUl5RwAACAA
      SURBVPXqxaZNm/jyyy/57LPPSvzyN5vNTJw4kalTp7J+/XoWL17M1atXnX8PDAzks88+Y/fu
      3QQGBvLdd98hSRIXLlygadOm/Pjjj1gsFo4ePcr69evZsmUL33//PTNnzrzlNsnLy+P48eMs
      X74cnU5H7dq12bRpE7///ju//fYb//M//8N7773HSy+9RHR0NG+99RbLly/Hw8ODDh06sGHD
      BlauXMmXX37J9evXycvLIyUlpax3nSAIFZBL3QYaFBREVFQUhw8fJjExkebNmxMdHc2ePXvI
      yckhJiYGuFHMrHPnzoSGhhISEoLD4SAhIYFhw4YRERHB0KFD+eabb8jPz3cu+/z589jtdj75
      5BOsVitZWVkUFhbSp08fpkyZQpMmTRg9ejR2u53ExEQ+/vhjiouLKSgowGb7v9u40tPTycrK
      YuPGjezatQuHw0FiYiK1a9d2vmbWrFlkZGSQmppKZGSkM+ZOnTpRt25dqlSpgt1u5/fff6d/
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='SIC Section vs current assets vs city' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
